<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>苟富</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gaufoo.com/"/>
  <updated>2017-08-30T12:34:47.392Z</updated>
  <id>http://gaufoo.com/</id>
  
  <author>
    <name>Gaufoo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C的表达式、语句与副作用</title>
    <link href="http://gaufoo.com/2017/08/30/C%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%81%E8%AF%AD%E5%8F%A5%E4%B8%8E%E5%89%AF%E4%BD%9C%E7%94%A8/"/>
    <id>http://gaufoo.com/2017/08/30/C的表达式、语句与副作用/</id>
    <published>2017-08-30T11:17:05.000Z</published>
    <updated>2017-08-30T12:34:47.392Z</updated>
    
    <content type="html"><![CDATA[<p>C语言中，通常利用副作用来完成我们的目标。但由于副作用产生的时机，其结果有时会让人疑惑。</p>
<a id="more"></a>
<hr>
<p>知乎上有这样一个<a href="https://www.zhihu.com/question/64370774/answer/219591438" target="_blank" rel="external">问题</a>:</p>
<blockquote><strong>C语言中 *p++ = *p 是如何工作的？</strong><br>我在测试一个运算符优先级的代码的时候，碰见了这个问题，我没法用自己的方式理解，很抱歉打扰各位，希望你们在闲暇之余，能解答一下我的困惑。<br><br>示例代码：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LEN 5</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">  <span class="built_in">printf</span> (<span class="string">"Hello World"</span>);</div><div class="line">  <span class="keyword">int</span> a[LEN] = &#123; <span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span> &#125;;</div><div class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">  <span class="keyword">int</span> *p = a;</div><div class="line"></div><div class="line">  <span class="keyword">for</span> (; i &lt; LEN; ++i)</div><div class="line">    &#123;</div><div class="line">        *p++ = *p;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;LEN;++i)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i]);</div><div class="line">    &#125;</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br></blockquote>



<p>问题的解答需要了解这些概念：</p>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="顺序点"><a href="#顺序点" class="headerlink" title="顺序点"></a>顺序点</h3><blockquote>A sequence point is a point in program execution at which all side effects are evaluated before going on to<br>the next step. In C, the semicolon in a statement marks a sequence point. That means all changes made by<br>assignment operators, increment operators, and decrement operators in a statement must take place before a<br>program proceeds to the next statement. Some operators that we’ll discuss in later chapters have sequence<br>points. Also, the end of any full expression is a sequence point.<br></blockquote>


<p>在顺序点处，所有的副作用都在进入下一步前被计算。<br>也就是说，一句语句中的赋值、自增、自减所作出的改变必须在程序进入下一个语句前发生。在C中，语句里的<strong>分号</strong>标志了一个顺序点。任何一个<strong>完整的表达式</strong>的结束也是一个顺序点。</p>
<p>但是，并<strong>没有保证</strong>在哪个表达式执行后发生。其结果取决于编译器的处理。</p>
<h3 id="完整的表达式"><a href="#完整的表达式" class="headerlink" title="完整的表达式"></a>完整的表达式</h3><blockquote>What’s a full expression? A full expression is one that’s not a subexpression of a larger expression. Examples<br>of full expressions include the expression in an expression statement and the expression serving as a test<br>condition for a while loop.<br></blockquote>


<p>完整的表达式不应该是更大的表达式中的子表达式。而是那些在表达式<strong>语句</strong>里的、以及在一个<code>while</code>循环里作为<strong>判断条件</strong>的表达式。</p>
<h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2><p>考虑：<br><code>y = (4 + x++) + (6 + x++);</code></p>
<p>C只能保证下一条语句前<code>x</code>自增了两次，却没有保证<code>x</code>是某个子表达式被计算后增加还是整个表达式被求值后增加。</p>
<h2 id="题目的解答"><a href="#题目的解答" class="headerlink" title="题目的解答"></a>题目的解答</h2><blockquote><code>*p++=*p;</code><br>这一句话一共包含了四个操作：<br>1. <code>*p</code> // 等号左边那个<br>2. <code>p++</code><br>3. <code>*p</code><br>4. <code>=</code><br>这些操作的所有依赖关系如下：<br><li> 1(<code>*p</code>)在2(<code>p++</code>)之前执行<br></li><li> 4(<code>=</code>)在1(<code>*p</code>)和3(<code>*p</code>)之后执行<br>有了这个约束，那么这四个操作的所有可能的顺序就有（人肉枚举有可能出错你自己检查）：<br></li><li> 1234<br></li><li> 1324<br></li><li> 1342<br></li><li> 3124<br></li><li> 3142<br><br>分别的意思就是<br></li><li> p[0]=p[1];p++;<br></li><li> p[0]=p[0];p++;<br></li><li> p[0]=p[0];p++;<br></li><li> p[0]=p[0];p++;<br></li><li> p[0]=p[0];p++;<br><br>作者：vczh<br>链接：<a href="https://www.zhihu.com/question/64370774/answer/219580436" target="_blank" rel="external">https://www.zhihu.com/question/64370774/answer/219580436</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br></li></blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C语言中，通常利用副作用来完成我们的目标。但由于副作用产生的时机，其结果有时会让人疑惑。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="C" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/C/"/>
    
    
      <category term="C" scheme="http://gaufoo.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Python获取豆瓣电影Top250</title>
    <link href="http://gaufoo.com/2017/08/29/Python%E8%8E%B7%E5%8F%96%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1Top250/"/>
    <id>http://gaufoo.com/2017/08/29/Python获取豆瓣电影Top250/</id>
    <published>2017-08-29T09:57:35.000Z</published>
    <updated>2017-08-29T11:34:05.958Z</updated>
    
    <content type="html"><![CDATA[<p>  练习html各元素的获取，熟悉BeautifulSoup的使用。<br>  实例：豆瓣top250电影名单获取。</p>
<a id="more"></a>
<hr>
<h2 id="获取html页面"><a href="#获取html页面" class="headerlink" title="获取html页面"></a>获取html页面</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_page</span><span class="params">(url)</span>:</span></div><div class="line">    data = requests.get(url).content</div><div class="line">    <span class="string">'''</span></div><div class="line"><span class="string">    这里有效,但据说有时要伪装成浏览器,代码修改如下:</span></div><div class="line"><span class="string">    data = requests.get(url, headers=&#123;</span></div><div class="line"><span class="string">        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36'</span></div><div class="line"><span class="string">    &#125;).content</span></div><div class="line"><span class="string">    '''</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> data</div></pre></td></tr></table></figure>
<p><code>User-Agent</code>的获取方法：console敲入命令：<code>navigator.userAgent</code></p>
<h2 id="解析页面"><a href="#解析页面" class="headerlink" title="解析页面"></a>解析页面</h2><ul><br><li><strong>将html交给BeautifulSoup解析一下</strong><br><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</div></pre></td></tr></table></figure><br><br></li><br><li><strong>找到数据element</strong><br>1. ol.grid_view<br><img src="/images/17-08-29-0.jpg" alt="t0"><br>2. div.hd<br><img src="/images/17-08-29-1.jpg" alt="t1"><br>3. span.title<br><img src="/images/17-08-29-2.jpg" alt="t2"><br></li><br><li><strong>出动选择器</strong><br><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">movie_list_soup = soup.find(<span class="string">'ol'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'grid_view'</span>&#125;)</div><div class="line">detail = movie_li.find(<span class="string">'div'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'hd'</span>&#125;)</div><div class="line">movie_name = detail.find(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'title'</span>&#125;).getText()</div></pre></td></tr></table></figure><br><br></li><br><li><strong>循环把一页结果存下来</strong><br><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">movie_name_list = []</div><div class="line"></div><div class="line"><span class="keyword">for</span> movie_li <span class="keyword">in</span> movie_list_soup.find_all(<span class="string">'li'</span>):</div><div class="line">    detail = movie_li.find(<span class="string">'div'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'hd'</span>&#125;)</div><div class="line">    movie_name = detail.find(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'title'</span>&#125;).getText()</div><div class="line">    movie_name_list.append(movie_name)</div></pre></td></tr></table></figure><br><br></li><br><li><strong>拿到下一页的element</strong><br><img src="/images/17-08-29-3.jpg" alt="t3"><br><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">next_page = soup.find(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'next'</span>&#125;).find(<span class="string">'a'</span>)</div></pre></td></tr></table></figure><br><br></li><br></ul>

<h2 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">with</span> open(<span class="string">'movies.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> fp:</div><div class="line">    <span class="keyword">while</span> url:</div><div class="line">        html = download_page(url)</div><div class="line">        movies, url = parse_html(html)</div><div class="line">        fp.write(<span class="string">u'&#123;movies&#125;\n'</span>.format(movies=<span class="string">'\n'</span>.join(movies)))</div></pre></td></tr></table></figure>
<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line">DOWNLOAD_URL = <span class="string">"https://movie.douban.com/top250"</span></div><div class="line"></div><div class="line"><span class="comment"># 获取html页面</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_page</span><span class="params">(url)</span>:</span></div><div class="line"></div><div class="line">    data = requests.get(url).content</div><div class="line">    <span class="string">'''</span></div><div class="line"><span class="string">    这里有效,但据说有时要伪装成浏览器,代码修改如下:</span></div><div class="line"><span class="string">    data = requests.get(url, headers=&#123;</span></div><div class="line"><span class="string">        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36'</span></div><div class="line"><span class="string">    &#125;).content</span></div><div class="line"><span class="string">    '''</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> data</div><div class="line"></div><div class="line"><span class="comment"># 解析页面并返回 list_movie 与 下一页的url</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_html</span><span class="params">(html)</span>:</span></div><div class="line"></div><div class="line">    soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</div><div class="line">    movie_list_soup = soup.find(<span class="string">'ol'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'grid_view'</span>&#125;)</div><div class="line"></div><div class="line">    movie_name_list = []</div><div class="line"></div><div class="line">    <span class="keyword">for</span> movie_li <span class="keyword">in</span> movie_list_soup.find_all(<span class="string">'li'</span>):</div><div class="line">        detail = movie_li.find(<span class="string">'div'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'hd'</span>&#125;)</div><div class="line">        movie_name = detail.find(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'title'</span>&#125;).getText()</div><div class="line">        movie_name_list.append(movie_name)</div><div class="line"></div><div class="line">    next_page = soup.find(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'next'</span>&#125;).find(<span class="string">'a'</span>)</div><div class="line"></div><div class="line">    <span class="keyword">if</span> next_page:</div><div class="line">        <span class="keyword">return</span> movie_name_list, DOWNLOAD_URL + next_page[<span class="string">'href'</span>]</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> movie_name_list, <span class="keyword">None</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    url = DOWNLOAD_URL</div><div class="line"></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'movies.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> fp:</div><div class="line">        <span class="keyword">while</span> url:</div><div class="line">            html = download_page(url)</div><div class="line">            movies, url = parse_html(html)</div><div class="line">            fp.write(<span class="string">u'&#123;movies&#125;\n'</span>.format(movies=<span class="string">'\n'</span>.join(movies)))    </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  练习html各元素的获取，熟悉BeautifulSoup的使用。&lt;br&gt;  实例：豆瓣top250电影名单获取。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Python" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/Python/"/>
    
    
      <category term="Python" scheme="http://gaufoo.com/tags/Python/"/>
    
      <category term="web" scheme="http://gaufoo.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>test指令用于比较数值大小的可能性及推导</title>
    <link href="http://gaufoo.com/2017/08/25/test%E6%8C%87%E4%BB%A4%E7%94%A8%E4%BA%8E%E6%AF%94%E8%BE%83%E6%95%B0%E5%80%BC%E5%A4%A7%E5%B0%8F%E7%9A%84%E5%8F%AF%E8%83%BD%E6%80%A7%E5%8F%8A%E6%8E%A8%E5%AF%BC/"/>
    <id>http://gaufoo.com/2017/08/25/test指令用于比较数值大小的可能性及推导/</id>
    <published>2017-08-24T16:50:36.000Z</published>
    <updated>2017-08-25T09:19:08.782Z</updated>
    
    <content type="html"><![CDATA[<p>x86汇编语言中，cmp指令常用于两数值之间比较大小，test指令常用于位级判断。那么，test可不可以也用于比较数值大小呢？</p>
<a id="more"></a>
<hr>
<h2 id="提出问题"><a href="#提出问题" class="headerlink" title="提出问题"></a>提出问题</h2><p>今天有朋友向我提出了这样的问题，<img src="/images/17-08-25-0.jpg" alt="p1"><br>为什么<code>test</code>还有这种操作，<code>set</code>指令和<code>test</code>究竟是怎么凑到一起的。</p>
<h2 id="查找信息"><a href="#查找信息" class="headerlink" title="查找信息"></a>查找信息</h2><blockquote>
<p>CMP指令与SUB指令的行为是一样的。在ATT格式中，列出操作数的顺序是相反的，这使代码有点难读。如果两个操作数相等，这些指令会将零标志位设置为1，而其他的标志可以用来确定两个操作数之间的大小关系。</p>
<p>TEST指令的行为和AND指令一样，除了它们只设置条件码而不改变目的寄存器的值。典型的用法是，两个操作数是一样的（例如，testq %rax, %rax用来检查%rax是负数，零，还是正数），或其中的一个操作数是一个掩码，用来指示哪些位应该被测试。</p>
</blockquote>
<p>唔，看来课本只是重复了我们的问题，并没有给出解答。<br><br></p>
<blockquote>
<p>典型的用法是，两个操作数是一样的（例如，testq %rax, %rax用来检查%rax是负数，零，还是正数）</p>
</blockquote>
<p>但从这可以看出，<code>test</code>确实有这个用法。<br><br></p>
<p><img src="/images/17-08-25-1.png" alt="p2"><br>这里找到线索，<code>set</code>指令是和条件码直接关联的。那么就从<code>test</code>如何影响和改变条件码入手吧。</p>
<h2 id="推导"><a href="#推导" class="headerlink" title="推导"></a>推导</h2><blockquote>
<p>机器是通过某些指令来改变条件码，然后通过判断条件码的组合来完成控制操作。个人理解是，这些控制指令是对条件码判断的一种封装。</p>
</blockquote>
<p>回到我们纠结的这个问题上面：为什么<code>test</code>可以用于判断大小，以及 如何形成判断。</p>
<p><code>cmp</code>的行为相对容易理解，右操作数减去左操作数，然后修改<code>CF</code> <code>ZF</code> <code>SF</code> <code>OF</code>的值。<br>而<code>test</code>则是两个操作数进行<code>与</code>，不会影响到<code>OF</code> <code>CF</code>，仅能改变<code>SF</code> <code>ZF</code>，确定真的可以用来比较大小吗？</p>
<p>不过，<code>test</code>用于比较大小的范围极窄，仅仅是用于判断符号，也就是和数值<code>0</code>作比较。只有这种特殊情况的话，进行推理则方便多了，大不了穷举嘛。</p>
<p>下面就来对比<code>test S, S</code>和<code>cmp $0，S</code>。</p>
<p>当<code>S</code>看作有符号数，且大于<code>0</code>时：</p>
<ul>
<li><code>test S, S</code>，<code>SF</code>置0，<code>ZF</code>置0，<code>OF</code>置0</li>
<li><code>cmp $0，S</code>，<code>SF</code>置0，<code>ZF</code>置0，<code>OF</code>置0</li>
</ul>
<p>当<code>S</code>看作有符号数，且等于<code>0</code>时：</p>
<ul>
<li><code>test S, S</code>，<code>SF</code>置0，<code>ZF</code>置1，<code>OF</code>置0</li>
<li><code>cmp $0，S</code>，<code>SF</code>置0，<code>ZF</code>置1，<code>OF</code>置0</li>
</ul>
<p>当<code>S</code>看作有符号数，且小于<code>0</code>时：</p>
<ul>
<li><code>test S, S</code>，<code>SF</code>置1，<code>ZF</code>置0，<code>OF</code>置0</li>
<li><code>cmp $0，S</code>，<code>SF</code>置1，<code>ZF</code>置0，<code>OF</code>置0</li>
</ul>
<p>当<code>S</code>看作无符号数，且等于<code>0</code>时：</p>
<ul>
<li><code>test S, S</code>，<code>ZF</code>置1，<code>CF</code>置0</li>
<li><code>cmp $0，S</code>，<code>ZF</code>置1，<code>CF</code>置0</li>
</ul>
<p>当<code>S</code>看作无符号数，且不等于<code>0</code>时：</p>
<ul>
<li><code>test S, S</code>，<code>ZF</code>置0，<code>CF</code>置0</li>
<li><code>cmp $0，S</code>，<code>ZF</code>置0，<code>CF</code>置0</li>
</ul>
<p>惊奇地发现这两句指令的行为是<strong>一模一样</strong>的。原因在于<code>cmp</code>在与<code>0</code>作比较时，是不可能发生<strong>溢出</strong>和<strong>进（借）位</strong>的，因而不可能影响<code>OF</code> <code>CF</code>位，这和<code>test</code>指令是一样的。剩下的<code>SF</code>和<code>ZF</code>很容易推理，这里不赘述。</p>
<h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><p>对这样一段C代码进行汇编处理。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> a)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">  <span class="keyword">return</span> a &gt; <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="不进行优化"><a href="#不进行优化" class="headerlink" title="不进行优化"></a>不进行优化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gcc -S test.c</div></pre></td></tr></table></figure>
<p>得到汇编代码（节选）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">movl	%edi, -4(%rbp)</div><div class="line">cmpl	$0, -4(%rbp)</div><div class="line">setg	%al</div></pre></td></tr></table></figure></p>
<h3 id="进行-O1-优化"><a href="#进行-O1-优化" class="headerlink" title="进行 O1 优化"></a>进行 O1 优化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gcc -S -O1 test.c</div></pre></td></tr></table></figure>
<p>得到汇编代码（节选）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">testl	%edi, %edi</div><div class="line">setg	%al</div></pre></td></tr></table></figure></p>
<p>事实证明，<code>test</code>确实可以用于与<code>0</code>进行大小比较，且编译器更愿意优化成这种形式。</p>
<h2 id="结论与反思"><a href="#结论与反思" class="headerlink" title="结论与反思"></a>结论与反思</h2><p>当我们难以理解指令的逻辑时，则需要去探究它背后具体的操作过程，才能真正地理解操作的实际效果。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;x86汇编语言中，cmp指令常用于两数值之间比较大小，test指令常用于位级判断。那么，test可不可以也用于比较数值大小呢？&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="汇编" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/%E6%B1%87%E7%BC%96/"/>
    
    
      <category term="编程" scheme="http://gaufoo.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="汇编" scheme="http://gaufoo.com/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo下的NexT主题配置</title>
    <link href="http://gaufoo.com/2017/08/23/Hexo%E4%B8%8B%E7%9A%84NexT%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
    <id>http://gaufoo.com/2017/08/23/Hexo下的NexT主题配置/</id>
    <published>2017-08-23T14:31:52.000Z</published>
    <updated>2017-08-24T05:09:13.254Z</updated>
    
    <content type="html"><![CDATA[<p>这两天在一直在倒腾个人网站/博客之类的东西，就目前来说，hexo博客部署在Github这个方案是我最满意的。但相关配置什么的都还不会，那就来折腾好了，一边试验一边记录。</p>
<p>本文旨在方便作者以后的查阅。如有需要，高兴你来自取。</p>
<p>以下是NexT主题的一些配置。</p>
<a id="more"></a>
<hr>
<h2 id="网站信息"><a href="#网站信息" class="headerlink" title="网站信息"></a>网站信息</h2><h3 id="网页小图标"><a href="#网页小图标" class="headerlink" title="网页小图标"></a>网页小图标</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></div></pre></td></tr></table></figure>
<p>找到一张32*32大小的ico格式图片，命名为<code>favicon.ico</code>，放入目录<code>你的仓库\themes\next\source\</code>下。</p>
<h3 id="网站关键字"><a href="#网站关键字" class="headerlink" title="网站关键字"></a>网站关键字</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">keywords:</span> <span class="string">"Hexo, NexT"</span></div></pre></td></tr></table></figure>
<p>修改网站的默认关键字，中间需要用<code>英文逗号</code>隔开。</p>
<h3 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">rss:</span></div></pre></td></tr></table></figure>
<p>默认留空，代表开启。如需禁用，在其后填写<code>false</code></p>
<p>开启后，使用 Hexo 生成的 Feed 链接。 你需要先安装 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="external">hexo-generator-feed</a> 插件。</p>
<h3 id="网站建立时间"><a href="#网站建立时间" class="headerlink" title="网站建立时间"></a>网站建立时间</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">since:</span> <span class="number">2015</span></div></pre></td></tr></table></figure>
<p>修改footer的<code>年份表示</code>。</p>
<h3 id="作者图标"><a href="#作者图标" class="headerlink" title="作者图标"></a>作者图标</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">authoricon:</span> <span class="string">heart</span></div></pre></td></tr></table></figure>
<p>修改footer的<code>年份表示</code>和<code>作者</code>之间的图标。</p>
<blockquote>
<p>图标名称可以在<a href="http://fontawesome.io/icons/" target="_blank" rel="external">点击此处</a>获取。</p>
</blockquote>
<h3 id="驱动与主题版权声明"><a href="#驱动与主题版权声明" class="headerlink" title="驱动与主题版权声明"></a>驱动与主题版权声明</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">copyright:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>footer那行<code>由 Hexo 强力驱动 | 主题 — NexT.Mist v5.1.2</code>，强烈建议开启，给设计师和工程师最起码的尊重。</p>
<hr>
<h2 id="SEO-设置"><a href="#SEO-设置" class="headerlink" title="SEO 设置"></a>SEO 设置</h2><p>百度百科对”seo”的定义是：SEO（Search Engine Optimization），汉译为搜索引擎优化。搜索引擎优化是一种利用搜索引擎的搜索规则来提高目的网站在有关搜索引擎内的排名的方式。<br>讲人话就是你的博客将更容易被Google到。</p>
<h3 id="规范化"><a href="#规范化" class="headerlink" title="规范化"></a>规范化</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">canonical:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>参考： <a href="https://support.google.com/webmasters/answer/139066" target="_blank" rel="external">https://support.google.com/webmasters/answer/139066</a></p>
<p>在设置之前，先把<code>你的仓库\_config.yml</code>中的<code>url: http://yourdomain.com</code>修改成你自己的url。</p>
<h3 id="SEO-站点链接优化"><a href="#SEO-站点链接优化" class="headerlink" title="SEO 站点链接优化"></a>SEO 站点链接优化</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">seo:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>HEXO默认的文章链接形式为domain/year/month/day/postname，默认就是一个四级url，并且可能造成url过长，对搜索引擎是十分不友好的，这里将进行优化。</p>
<h3 id="主页副标题"><a href="#主页副标题" class="headerlink" title="主页副标题"></a>主页副标题</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">index_with_subtitle:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>如果开启，将添加主页副标题。副标题设置格式如下：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">subtitle:</span> <span class="string">Subtitle</span></div></pre></td></tr></table></figure></p>
<hr>
<h2 id="菜单设置"><a href="#菜单设置" class="headerlink" title="菜单设置"></a>菜单设置</h2><h3 id="菜单项目"><a href="#菜单项目" class="headerlink" title="菜单项目"></a>菜单项目</h3><p>示例<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attr">menu:</span></div><div class="line"><span class="attr">  home:</span> <span class="string">/</span></div><div class="line"><span class="attr">  archives:</span> <span class="string">/archives</span></div><div class="line">  <span class="comment">#about: /about</span></div><div class="line">  <span class="comment">#categories: /categories</span></div><div class="line"><span class="attr">  tags:</span> <span class="string">/tags</span></div><div class="line">  <span class="comment">#commonweal: /404.html</span></div></pre></td></tr></table></figure></p>
<p>设定菜单项目，对应的字段是 menu。 菜单内容的设置格式是：<code>item name: link</code>。可以手动添加其他菜单项目。其中 item name 是一个名称，这个名称并不直接显示在页面上，它将用于匹配图标以及翻译。</p>
<p> 默认的hexo里没有<code>about</code>、<code>categories</code>、<code>tags</code>、<code>commonweal</code>页面，需要手动创建。</p>
<p> 在终端创建页面：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo new page <span class="string">"about"</span></div><div class="line">hexo new page <span class="string">"categories"</span></div></pre></td></tr></table></figure></p>
<h3 id="菜单文本"><a href="#菜单文本" class="headerlink" title="菜单文本"></a>菜单文本</h3><p>设置菜单项的显示文本。Hexo 在生成项目名称的时候将使用这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 languages/{language}.yml （{language} 为你所使用的语言）。</p>
<p>示例<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">menu:</span></div><div class="line"><span class="attr">  home:</span> <span class="string">首页</span></div><div class="line"><span class="attr">  archives:</span> <span class="string">归档</span></div><div class="line"><span class="attr">  categories:</span> <span class="string">分类</span></div><div class="line"><span class="attr">  tags:</span> <span class="string">标签</span></div><div class="line"><span class="attr">  about:</span> <span class="string">关于</span></div><div class="line"><span class="attr">  search:</span> <span class="string">搜索</span></div><div class="line"><span class="attr">  commonweal:</span> <span class="string">公益404</span></div><div class="line"><span class="attr">  something:</span> <span class="string">有料</span></div></pre></td></tr></table></figure></p>
<h3 id="菜单图标"><a href="#菜单图标" class="headerlink" title="菜单图标"></a>菜单图标</h3><p>设定菜单项的图标，对应的字段是 menu_icons。 此设定格式是 item name: icon name，其中 item name 与上一步所配置的菜单名字对应，icon name 是 Font Awesome 图标的 名字。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。</p>
<p>示例<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="attr">menu_icons:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  home:</span> <span class="string">home</span></div><div class="line"><span class="attr">  about:</span> <span class="string">user</span></div><div class="line"><span class="attr">  categories:</span> <span class="string">th</span></div><div class="line"><span class="attr">  schedule:</span> <span class="string">calendar</span></div><div class="line"><span class="attr">  tags:</span> <span class="string">tags</span></div><div class="line"><span class="attr">  archives:</span> <span class="string">archive</span></div><div class="line"><span class="attr">  sitemap:</span> <span class="string">sitemap</span></div><div class="line"><span class="attr">  commonweal:</span> <span class="string">heartbeat</span></div></pre></td></tr></table></figure></p>
<p>图标名称可以在<a href="http://fontawesome.io/icons/" target="_blank" rel="external">点击此处</a>获取。</p>
<hr>
<h2 id="主题方案"><a href="#主题方案" class="headerlink" title="主题方案"></a>主题方案</h2><p>NexT有四种方案，选择其中一种，其他注释处理。</p>
<p>示例：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Schemes</span></div><div class="line"><span class="comment">#scheme: Muse</span></div><div class="line"><span class="attr">scheme:</span> <span class="string">Mist</span></div><div class="line"><span class="comment">#scheme: Pisces</span></div><div class="line"><span class="comment">#scheme: Gemini</span></div></pre></td></tr></table></figure></p>
<hr>
<h2 id="侧栏"><a href="#侧栏" class="headerlink" title="侧栏"></a>侧栏</h2><h3 id="个人社交链接"><a href="#个人社交链接" class="headerlink" title="个人社交链接"></a>个人社交链接</h3><h4 id="设置链接"><a href="#设置链接" class="headerlink" title="设置链接"></a>设置链接</h4><p>链接放置在 social 字段下，一行一个链接。其键值格式是 <code>显示文本: 链接地址</code>。<br>示例：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Social links</span></div><div class="line"><span class="attr">social:</span></div><div class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/your-user-name</span></div><div class="line"><span class="attr">  Twitter:</span> <span class="attr">https://twitter.com/your-user-name</span></div><div class="line">  <span class="string">微博:</span> <span class="attr">http://weibo.com/your-user-name</span></div><div class="line">  <span class="string">豆瓣:</span> <span class="attr">http://douban.com/people/your-user-name</span></div><div class="line">  <span class="string">知乎:</span> <span class="attr">http://www.zhihu.com/people/your-user-name</span></div><div class="line">  <span class="comment"># 等等</span></div></pre></td></tr></table></figure></p>
<h4 id="设置图标"><a href="#设置图标" class="headerlink" title="设置图标"></a>设置图标</h4><p>可以通过将<code>enable</code>设置成<code>false</code>来取消图标显示。</p>
<blockquote>
<p>图标名称可以在<a href="http://fontawesome.io/icons/" target="_blank" rel="external">点击此处</a>获取。</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Social Icons</span></div><div class="line"><span class="attr">social_icons:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line">  <span class="comment"># Icon Mappings</span></div><div class="line"><span class="attr">  GitHub:</span> <span class="string">github</span></div><div class="line"><span class="attr">  Twitter:</span> <span class="string">twitter</span></div><div class="line">  <span class="string">微博:</span> <span class="string">weibo</span></div></pre></td></tr></table></figure>
<h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p>默认：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#links_title: Links</span></div><div class="line"><span class="comment">#links_layout: block</span></div><div class="line"><span class="comment">#links_layout: inline</span></div><div class="line"><span class="comment">#links:</span></div><div class="line">  <span class="comment">#Title: http://example.com/</span></div></pre></td></tr></table></figure></p>
<p><code>Links</code>可以用来设置标题，<code>links</code>下摆放链接。<br>示例：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">links_title:</span> <span class="string">看看他们</span></div><div class="line"><span class="attr">links_layout:</span> <span class="string">block</span></div><div class="line"><span class="comment">#links_layout: inline</span></div><div class="line"><span class="attr">links:</span></div><div class="line">  <span class="string">小土刀:</span> <span class="attr">http://wdxtub.com/</span></div></pre></td></tr></table></figure></p>
<h3 id="个人头像"><a href="#个人头像" class="headerlink" title="个人头像"></a>个人头像</h3><p>图片命名<code>avatar.jpg</code>或<code>avatar.png</code>，<br>放置在目录<code>你的仓库\themes\next\source\images\</code>下，<br>并设置字段<code>avatar</code><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">avatar:</span> <span class="string">/images/avatar.jpg</span></div></pre></td></tr></table></figure></p>
<h3 id="侧栏目录"><a href="#侧栏目录" class="headerlink" title="侧栏目录"></a>侧栏目录</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">toc:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  number:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  wrap:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<p><code>enable</code>字段决定是否启动文章目录功能，<code>number</code>字段决定是否自动为目录添加数字标记，<code>wrap</code>字段决定目录标题过长时是否换行。</p>
<h3 id="版权声明"><a href="#版权声明" class="headerlink" title="版权声明"></a>版权声明</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">creative_commons:</span> <span class="string">by-nc-nd</span></div></pre></td></tr></table></figure>
<p>选择合适的版权声明，可选项：<code>by</code>, <code>by-nc</code>, <code>by-nc-nd</code>, <code>by-nc-sa</code>, <code>by-nd</code>, <code>by-sa</code>, <code>zero</code>，图标将显示在侧栏上。</p>
<h3 id="侧栏样式"><a href="#侧栏样式" class="headerlink" title="侧栏样式"></a>侧栏样式</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="attr">sidebar:</span></div><div class="line"><span class="attr">  position:</span> <span class="string">left</span></div><div class="line">  <span class="comment">#position: right</span></div><div class="line"></div><div class="line"><span class="attr">  display:</span> <span class="string">post</span></div><div class="line">  <span class="comment">#display: always</span></div><div class="line">  <span class="comment">#display: hide</span></div><div class="line">  <span class="comment">#display: remove</span></div><div class="line"></div><div class="line"><span class="attr">  offset:</span> <span class="number">12</span></div><div class="line"><span class="attr">  offset_float:</span> <span class="number">12</span></div><div class="line"></div><div class="line"><span class="attr">  b2t:</span> <span class="literal">false</span></div><div class="line"></div><div class="line"><span class="attr">  scrollpercent:</span> <span class="literal">false</span></div><div class="line"></div><div class="line"><span class="attr">  onmobile:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<h4 id="侧栏位置"><a href="#侧栏位置" class="headerlink" title="侧栏位置"></a>侧栏位置</h4><p>字段 <code>position</code> ，可选 左 <code>left</code> 、右 <code>right</code>，此项只在某些样式生效。</p>
<h4 id="出现时机"><a href="#出现时机" class="headerlink" title="出现时机"></a>出现时机</h4><p>字段 <code>display</code>，可选项：</p>
<ul>
<li><code>post</code> : 默认项。自动展开。</li>
<li><code>always</code> : 始终展开。</li>
<li><code>hide</code> : 只在点击 <code>展开按钮</code> 时展开。</li>
<li><code>remove</code> : 永不展开，且去除 <code>展开按钮</code> 。</li>
</ul>
<h4 id="间距"><a href="#间距" class="headerlink" title="间距"></a>间距</h4><p><code>offset</code> , <code>offset_float</code> , 设置与菜单栏的间距。</p>
<h4 id="回到顶部"><a href="#回到顶部" class="headerlink" title="回到顶部"></a>回到顶部</h4><p><code>b2t</code> 字段设置 <code>回到顶部</code> 按钮位置，<code>false</code> 置于 <code>展开按钮</code> 旁，<code>true</code> 置于侧栏里。</p>
<h4 id="页面百分比"><a href="#页面百分比" class="headerlink" title="页面百分比"></a>页面百分比</h4><p><code>scrollpercent</code> 设置 <code>回到顶部</code> 按钮旁是否显示网页所处位置占整页的百分比。</p>
<h4 id="移动端可见"><a href="#移动端可见" class="headerlink" title="移动端可见"></a>移动端可见</h4><p><code>onmobile</code> 设置移动端是否显示侧栏。</p>
<hr>
<h2 id="Po文设置"><a href="#Po文设置" class="headerlink" title="Po文设置"></a>Po文设置</h2><h3 id="直达余下全文"><a href="#直达余下全文" class="headerlink" title="直达余下全文"></a>直达余下全文</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">scroll_to_more:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<p>点击阅读全文后，是否直达 <code>&lt;!--more--&gt;</code> 后的余下全文位置。</p>
<h3 id="保存页面位置"><a href="#保存页面位置" class="headerlink" title="保存页面位置"></a>保存页面位置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">save_scroll:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<p>是否在cookies里为每个页面保存阅读位置。</p>
<h3 id="自动序言"><a href="#自动序言" class="headerlink" title="自动序言"></a>自动序言</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>主页显示文章是否自动摘录描述作为序言。</p>
<h3 id="截取序言"><a href="#截取序言" class="headerlink" title="截取序言"></a>截取序言</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">auto_excerpt:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  length:</span> <span class="number">150</span></div></pre></td></tr></table></figure>
<p>不建议开启，推荐使用 <code>&lt;!--more--&gt;</code> 来精确控制序言。</p>
<h3 id="作者信息"><a href="#作者信息" class="headerlink" title="作者信息"></a>作者信息</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">post_meta:</span></div><div class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  created_at:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  updated_at:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  categories:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p><code>created_at</code>：是否显示创建时间，<code>updated_at</code>：是否显示更新时间， <code>categories</code>：是否显示分类目录。</p>
<h3 id="字数统计信息"><a href="#字数统计信息" class="headerlink" title="字数统计信息"></a>字数统计信息</h3><p>启动功能需要下载插件：<a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="external">https://github.com/willin/hexo-wordcount</a><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attr">post_wordcount:</span></div><div class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  wordcount:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  min2read:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  totalcount:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  separated_meta:</span> <span class="literal">false</span></div></pre></td></tr></table></figure></p>
<p><code>wordcount</code>：开启字数统计，<code>min2read</code>：开启大致阅读时间，<code>totalcount</code>：开启所有文章总字体显示，<code>separated_meta</code>：开启独占一行。</p>
<h3 id="微信二维码"><a href="#微信二维码" class="headerlink" title="微信二维码"></a>微信二维码</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">wechat_subscriber:</span></div><div class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  qcode:</span> <span class="string">/path/to/your/wechatqcode</span> <span class="string">ex.</span> <span class="string">/uploads/wechat-qcode.jpg</span></div><div class="line"><span class="attr">  description:</span> <span class="string">ex.</span> <span class="string">subscribe</span> <span class="string">to</span> <span class="string">my</span> <span class="string">blog</span> <span class="string">by</span> <span class="string">scanning</span> <span class="string">my</span> <span class="string">public</span> <span class="string">wechat</span> <span class="string">account</span></div></pre></td></tr></table></figure>
<p><code>enabled</code>：文末是否开启微信二维码显示，<code>qcode</code>：二维码图片所在路径，示例: <code>/uploads/wechat-qcode.jpg</code>，<code>description</code>：二维码底下的简要描述文字。</p>
<p><strong>未完待续</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这两天在一直在倒腾个人网站/博客之类的东西，就目前来说，hexo博客部署在Github这个方案是我最满意的。但相关配置什么的都还不会，那就来折腾好了，一边试验一边记录。&lt;/p&gt;
&lt;p&gt;本文旨在方便作者以后的查阅。如有需要，高兴你来自取。&lt;/p&gt;
&lt;p&gt;以下是NexT主题的一些配置。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo教程" scheme="http://gaufoo.com/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo" scheme="http://gaufoo.com/tags/Hexo/"/>
    
      <category term="配置" scheme="http://gaufoo.com/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>赞美github</title>
    <link href="http://gaufoo.com/2017/08/23/%E8%B5%9E%E7%BE%8Egithub/"/>
    <id>http://gaufoo.com/2017/08/23/赞美github/</id>
    <published>2017-08-23T04:21:02.000Z</published>
    <updated>2017-08-23T18:15:46.541Z</updated>
    
    <content type="html"><![CDATA[<p>感谢github</p>
<p>感谢hexo</p>
<p>感谢cctv<br><a id="more"></a></p>
<p>免费又夸张的博客</p>
<p>hhhhhhhhh(大笑</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感谢github&lt;/p&gt;
&lt;p&gt;感谢hexo&lt;/p&gt;
&lt;p&gt;感谢cctv&lt;br&gt;
    
    </summary>
    
      <category term="不归" scheme="http://gaufoo.com/categories/%E4%B8%8D%E5%BD%92/"/>
    
    
  </entry>
  
  <entry>
    <title>My New Post</title>
    <link href="http://gaufoo.com/2017/08/23/My-New-Post/"/>
    <id>http://gaufoo.com/2017/08/23/My-New-Post/</id>
    <published>2017-08-22T17:55:54.000Z</published>
    <updated>2017-08-23T16:06:55.984Z</updated>
    
    <content type="html"><![CDATA[<p>This is my first post.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is my first post.&lt;/p&gt;

    
    </summary>
    
      <category term="不归" scheme="http://gaufoo.com/categories/%E4%B8%8D%E5%BD%92/"/>
    
    
  </entry>
  
</feed>
