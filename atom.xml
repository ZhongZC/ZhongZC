<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>苟富</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gaufoo.com/"/>
  <updated>2017-09-06T12:42:44.255Z</updated>
  <id>http://gaufoo.com/</id>
  
  <author>
    <name>Gaufoo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo下的NexT主题配置（二）</title>
    <link href="http://gaufoo.com/2017/09/06/Hexo%E4%B8%8B%E7%9A%84NexT%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://gaufoo.com/2017/09/06/Hexo下的NexT主题配置（二）/</id>
    <published>2017-09-06T09:40:00.000Z</published>
    <updated>2017-09-06T12:42:44.255Z</updated>
    
    <content type="html"><![CDATA[<p>上期链接：<a href="http://gaufoo.com/2017/08/23/Hexo下的NexT主题配置（一）/">http://gaufoo.com/2017/08/23/Hexo下的NexT主题配置（一）/</a></p>
<a id="more"></a>
<hr>
<h2 id="文章设置"><a href="#文章设置" class="headerlink" title="文章设置"></a>文章设置</h2><h3 id="直达余下全文"><a href="#直达余下全文" class="headerlink" title="直达余下全文"></a>直达余下全文</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">scroll_to_more:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<p>点击阅读全文后，是否直达 <code>&lt;!--more--&gt;</code> 后的余下全文位置。</p>
<h3 id="保存页面位置"><a href="#保存页面位置" class="headerlink" title="保存页面位置"></a>保存页面位置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">save_scroll:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<p>是否在cookies里为每个页面保存阅读位置。</p>
<h3 id="自动序言"><a href="#自动序言" class="headerlink" title="自动序言"></a>自动序言</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>主页显示文章是否自动摘录描述作为序言。</p>
<h3 id="截取序言"><a href="#截取序言" class="headerlink" title="截取序言"></a>截取序言</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">auto_excerpt:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  length:</span> <span class="number">150</span></div></pre></td></tr></table></figure>
<p>不建议开启，推荐使用 <code>&lt;!--more--&gt;</code> 来精确控制序言。</p>
<h3 id="作者信息"><a href="#作者信息" class="headerlink" title="作者信息"></a>作者信息</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">post_meta:</span></div><div class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  created_at:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  updated_at:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  categories:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p><code>created_at</code>：是否显示创建时间，<code>updated_at</code>：是否显示更新时间， <code>categories</code>：是否显示分类目录。</p>
<h3 id="字数统计信息"><a href="#字数统计信息" class="headerlink" title="字数统计信息"></a>字数统计信息</h3><p>启动功能需要下载插件：<a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="external">https://github.com/willin/hexo-wordcount</a><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attr">post_wordcount:</span></div><div class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  wordcount:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  min2read:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  totalcount:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  separated_meta:</span> <span class="literal">false</span></div></pre></td></tr></table></figure></p>
<p><code>wordcount</code>：开启字数统计，<code>min2read</code>：开启大致阅读时间，<code>totalcount</code>：开启所有文章总字体显示，<code>separated_meta</code>：开启独占一行。</p>
<h3 id="微信二维码"><a href="#微信二维码" class="headerlink" title="微信二维码"></a>微信二维码</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">wechat_subscriber:</span></div><div class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  qcode:</span> <span class="string">/path/to/your/wechatqcode</span> <span class="string">ex.</span> <span class="string">/uploads/wechat-qcode.jpg</span></div><div class="line"><span class="attr">  description:</span> <span class="string">ex.</span> <span class="string">subscribe</span> <span class="string">to</span> <span class="string">my</span> <span class="string">blog</span> <span class="string">by</span> <span class="string">scanning</span> <span class="string">my</span> <span class="string">public</span> <span class="string">wechat</span> <span class="string">account</span></div></pre></td></tr></table></figure>
<p><code>enabled</code>：文末是否开启微信二维码显示，<code>qcode</code>：二维码图片所在路径，示例: <code>/uploads/wechat-qcode.jpg</code>，<code>description</code>：二维码底下的简要描述文字。</p>
<h3 id="打赏"><a href="#打赏" class="headerlink" title="打赏"></a>打赏</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">reward_comment:</span> <span class="string">您的支持将鼓励我继续创作！</span></div><div class="line"><span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.jpg</span></div><div class="line"><span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span></div><div class="line"><span class="attr">bitcoin:</span> <span class="string">/images/bitcoin.png</span></div></pre></td></tr></table></figure>
<p><code>reward_comment</code>：打赏提示性语句，<code>wechatpay</code>：微信支付二维码图片存储路径，<code>alipay</code>：支付宝二维码图片存储路径，<code>bitcoin</code>：比特币支付二维码图片存储路径。</p>
<h3 id="文章版权声明"><a href="#文章版权声明" class="headerlink" title="文章版权声明"></a>文章版权声明</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">post_copyright:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  license:</span> <span class="string">CC</span> <span class="string">BY-NC-ND</span> <span class="number">3.0</span></div><div class="line"><span class="attr">  license_url:</span> <span class="attr">https://creativecommons.org/licenses/by-nc-nd/3.0/</span></div></pre></td></tr></table></figure>
<p><code>enable</code>：开启版权声明提醒，<code>license</code>：版权声明类型，<code>license_url</code>：全球版权页</p>
<hr>
<h2 id="Misc-主题方案设置"><a href="#Misc-主题方案设置" class="headerlink" title="Misc 主题方案设置"></a>Misc 主题方案设置</h2><h3 id="移动设备减少边框"><a href="#移动设备减少边框" class="headerlink" title="移动设备减少边框"></a>移动设备减少边框</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">mobile_layout_economy:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<p>不建议true</p>
<h3 id="安卓设备面板颜色"><a href="#安卓设备面板颜色" class="headerlink" title="安卓设备面板颜色"></a>安卓设备面板颜色</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">android_chrome_color:</span> <span class="string">"#222"</span></div></pre></td></tr></table></figure>
<h3 id="代码高亮主题"><a href="#代码高亮主题" class="headerlink" title="代码高亮主题"></a>代码高亮主题</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">highlight_theme:</span> <span class="string">normal</span></div></pre></td></tr></table></figure>
<p><code>highlight_theme</code>：可用值为：<code>normal</code>，<code>night</code>，<code>night eighties</code>，<code>night blue</code>，<code>night bright</code><br>效果示例： <a href="https://github.com/chriskempson/tomorrow-theme" target="_blank" rel="external">https://github.com/chriskempson/tomorrow-theme</a></p>
<hr>
<h2 id="字体设置"><a href="#字体设置" class="headerlink" title="字体设置"></a>字体设置</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">font:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  host:</span></div></pre></td></tr></table></figure>
<p><code>host</code>：外链字体库地址，例如 //fonts.googleapis.com (默认值)</p>
<h3 id="全局字体"><a href="#全局字体" class="headerlink" title="全局字体"></a>全局字体</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">global:</span></div><div class="line"><span class="attr">  external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  family:</span> <span class="string">Lato</span></div></pre></td></tr></table></figure>
<p>全局字体将应用在body元素上，<code>external</code>表示从<code>host</code>加载字体库，<code>family</code>：选择字体。</p>
<h3 id="标题字体"><a href="#标题字体" class="headerlink" title="标题字体"></a>标题字体</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">headings:</span></div><div class="line"><span class="attr">  external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  family:</span></div></pre></td></tr></table></figure>
<p>标题字体将应用于h1,h2,h3,h4,h5,h6标题上，<code>external</code>同上，<code>family</code>：选择字体，空白则应用全局字体。</p>
<h3 id="文章字体"><a href="#文章字体" class="headerlink" title="文章字体"></a>文章字体</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">posts:</span></div><div class="line"><span class="attr">  external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  family:</span></div></pre></td></tr></table></figure>
<p><code>external</code>、<code>family</code>同上。</p>
<h3 id="LOGO-字体"><a href="#LOGO-字体" class="headerlink" title="LOGO 字体"></a>LOGO 字体</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">logo:</span></div><div class="line"><span class="attr">  external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  family:</span></div><div class="line"><span class="attr">  size:</span></div></pre></td></tr></table></figure>
<p><code>external</code>、<code>family</code>同上。<code>size</code>：字体大小单独设置。</p>
<h3 id="代码块字体"><a href="#代码块字体" class="headerlink" title="代码块字体"></a>代码块字体</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">codes:</span></div><div class="line"><span class="attr">  external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  family:</span></div><div class="line"><span class="attr">  size:</span></div></pre></td></tr></table></figure>
<p><code>external</code>、<code>family</code>、<code>size</code>同上。</p>
<hr>
<h2 id="第三方服务设置"><a href="#第三方服务设置" class="headerlink" title="第三方服务设置"></a>第三方服务设置</h2><h3 id="MathJax"><a href="#MathJax" class="headerlink" title="MathJax"></a>MathJax</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">mathjax:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  per_page:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  cdn:</span> <span class="string">//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span></div></pre></td></tr></table></figure>
<p><code>enable</code>：是否开启 MathJax 来显示数学公式，<code>cdn</code>：用于指定 MathJax 的脚本地址，默认是 MathJax 官方提供的 CDN 地址。</p>
<h3 id="Han"><a href="#Han" class="headerlink" title="Han"></a>Han</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">han:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<p>文档：<a href="https://hanzi.pro/" target="_blank" rel="external">https://hanzi.pro/</a></p>
<h3 id="Swiftype-站内搜索"><a href="#Swiftype-站内搜索" class="headerlink" title="Swiftype 站内搜索"></a>Swiftype 站内搜索</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">swiftype_key:</span></div></pre></td></tr></table></figure>
<p>填写Swiftype Search API的值</p>
<h3 id="百度分析"><a href="#百度分析" class="headerlink" title="百度分析"></a>百度分析</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">baidu_analytics:</span></div></pre></td></tr></table></figure>
<p>填写百度分析ID</p>
<h3 id="多说"><a href="#多说" class="headerlink" title="多说"></a>多说</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">duoshuo_shortname:</span></div><div class="line"></div><div class="line"><span class="attr">duoshuo_share:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="attr">duoshuo_info:</span></div><div class="line"><span class="attr">  ua_enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  admin_enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  user_id:</span> <span class="number">0</span></div><div class="line"><span class="attr">  admin_nickname:</span> <span class="string">Author</span></div></pre></td></tr></table></figure>
<p>相关：<a href="http://dev.duoshuo.com" target="_blank" rel="external">http://dev.duoshuo.com</a></p>
<h3 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a>Disqus</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">disqus:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  shortname:</span></div><div class="line"><span class="attr">  count:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p><code>enable</code>：是否开启 Disqus 评论，<code>count</code>：是否显示评论数</p>
<h3 id="Hypercomments"><a href="#Hypercomments" class="headerlink" title="Hypercomments"></a>Hypercomments</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">hypercomments_id:</span></div></pre></td></tr></table></figure>
<h3 id="畅言"><a href="#畅言" class="headerlink" title="畅言"></a>畅言</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">changyan:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  appid:</span></div><div class="line"><span class="attr">  appkey:</span></div></pre></td></tr></table></figure>
<h3 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a>Valine</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attr">valine:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  appid:</span>  <span class="comment"># your leancloud application appid</span></div><div class="line"><span class="attr">  appkey:</span>  <span class="comment"># your leancloud application appkey</span></div><div class="line"><span class="attr">  notify:</span> <span class="literal">false</span> <span class="comment"># mail notifier , https://github.com/xCss/Valine/wiki</span></div><div class="line"><span class="attr">  verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></div><div class="line"><span class="attr">  placeholder:</span> <span class="string">Comment</span> <span class="string">input</span> <span class="string">placeholder</span></div></pre></td></tr></table></figure>
<p>相关：<a href="https://leancloud.cn" target="_blank" rel="external">https://leancloud.cn</a></p>
<h3 id="友言"><a href="#友言" class="headerlink" title="友言"></a>友言</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">youyan_uid:</span> <span class="string">your</span> <span class="string">uid</span></div></pre></td></tr></table></figure>
<h3 id="LiveRe"><a href="#LiveRe" class="headerlink" title="LiveRe"></a>LiveRe</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">livere_uid:</span> <span class="string">your</span> <span class="string">uid</span></div></pre></td></tr></table></figure>
<p>相关：<a href="https://livere.com/insight/myCode" target="_blank" rel="external">https://livere.com/insight/myCode</a></p>
<h3 id="百度分享"><a href="#百度分享" class="headerlink" title="百度分享"></a>百度分享</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">baidushare:</span></div><div class="line"><span class="attr">  type:</span> <span class="string">button</span></div></pre></td></tr></table></figure>
<p>注意：百度分享不支持https。<code>type</code>可选项：<code>button</code>，<code>slice</code>。</p>
<h3 id="JiaThis"><a href="#JiaThis" class="headerlink" title="JiaThis"></a>JiaThis</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">add_this_id:</span></div></pre></td></tr></table></figure>
<p>相关：<a href="http://www.jiathis.com/" target="_blank" rel="external">http://www.jiathis.com/</a></p>
<h3 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">google_site_verification:</span></div></pre></td></tr></table></figure>
<p>Google 验证码，相关：<a href="https://www.google.com/webmasters/" target="_blank" rel="external">https://www.google.com/webmasters/</a><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">google_analytics:</span></div></pre></td></tr></table></figure></p>
<p>Google 分析</p>
<h3 id="Yandex"><a href="#Yandex" class="headerlink" title="Yandex"></a>Yandex</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">yandex_site_verification:</span></div></pre></td></tr></table></figure>
<p>相关：<a href="https://webmaster.yandex.ru/" target="_blank" rel="external">https://webmaster.yandex.ru/</a></p>
<h3 id="CNZZ-统计"><a href="#CNZZ-统计" class="headerlink" title="CNZZ 统计"></a>CNZZ 统计</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">cnzz_siteid:</span></div></pre></td></tr></table></figure>
<h3 id="Application-Insights"><a href="#Application-Insights" class="headerlink" title="Application Insights"></a>Application Insights</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">application_insights:</span></div></pre></td></tr></table></figure>
<p>相关：<a href="https://azure.microsoft.com/en-us/services/application-insights/" target="_blank" rel="external">https://azure.microsoft.com/en-us/services/application-insights/</a></p>
<h3 id="Facebook-SDK"><a href="#Facebook-SDK" class="headerlink" title="Facebook SDK"></a>Facebook SDK</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attr">facebook_sdk:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  app_id:</span>       <span class="comment">#&lt;app_id&gt;</span></div><div class="line"><span class="attr">  fb_admin:</span>     <span class="comment">#&lt;user_id&gt;</span></div><div class="line"><span class="attr">  like_button:</span>  <span class="comment">#true</span></div><div class="line"><span class="attr">  webmaster:</span>    <span class="comment">#true</span></div></pre></td></tr></table></figure>
<p>相关：<a href="https://github.com/iissnan/hexo-theme-next/pull/410" target="_blank" rel="external">https://github.com/iissnan/hexo-theme-next/pull/410</a></p>
<h3 id="Facebook-评论"><a href="#Facebook-评论" class="headerlink" title="Facebook 评论"></a>Facebook 评论</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">facebook_comments_plugin:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  num_of_posts:</span> <span class="number">10</span>  <span class="comment"># min posts num is 1</span></div><div class="line"><span class="attr">  width:</span> <span class="number">100</span><span class="string">%</span>       <span class="comment"># default width is 550px</span></div><div class="line"><span class="attr">  scheme:</span> <span class="string">light</span>     <span class="comment"># default scheme is light (light or dark)</span></div></pre></td></tr></table></figure>
<h3 id="VKontakte-API"><a href="#VKontakte-API" class="headerlink" title="VKontakte API"></a>VKontakte API</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attr">vkontakte_api:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  app_id:</span>       <span class="comment">#&lt;app_id&gt;</span></div><div class="line"><span class="attr">  like:</span>         <span class="literal">true</span></div><div class="line"><span class="attr">  comments:</span>     <span class="literal">true</span></div><div class="line"><span class="attr">  num_of_posts:</span> <span class="number">10</span></div></pre></td></tr></table></figure>
<p>相关：<a href="https://vk.com/editapp?act=create" target="_blank" rel="external">https://vk.com/editapp?act=create</a></p>
<h3 id="星星评级"><a href="#星星评级" class="headerlink" title="星星评级"></a>星星评级</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">rating:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  id:</span>     <span class="comment">#&lt;app_id&gt;</span></div><div class="line"><span class="attr">  color:</span>  <span class="string">fc6423</span></div></pre></td></tr></table></figure>
<p>相关：<a href="https://widgetpack.com" target="_blank" rel="external">https://widgetpack.com</a></p>
<h3 id="阅读数统计"><a href="#阅读数统计" class="headerlink" title="阅读数统计"></a>阅读数统计</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">leancloud_visitors:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  app_id:</span> <span class="comment">#&lt;app_id&gt;</span></div><div class="line"><span class="attr">  app_key:</span> <span class="comment">#&lt;app_key&gt;</span></div></pre></td></tr></table></figure>
<p>相关：<a href="https://leancloud.cn" target="_blank" rel="external">https://leancloud.cn</a></p>
<h3 id="不蒜子统计"><a href="#不蒜子统计" class="headerlink" title="不蒜子统计"></a>不蒜子统计</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="attr">busuanzi_count:</span></div><div class="line">  <span class="comment"># count values only if the other configs are false</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line">  <span class="comment"># custom uv span for the whole site</span></div><div class="line"><span class="attr">  site_uv:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  site_uv_header:</span> <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-user"&gt;&lt;/i&gt;</span></div><div class="line"><span class="attr">  site_uv_footer:</span></div><div class="line">  <span class="comment"># custom pv span for the whole site</span></div><div class="line"><span class="attr">  site_pv:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  site_pv_header:</span> <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-eye"&gt;&lt;/i&gt;</span></div><div class="line"><span class="attr">  site_pv_footer:</span></div><div class="line">  <span class="comment"># custom pv span for one page only</span></div><div class="line"><span class="attr">  page_pv:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  page_pv_header:</span> <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-file-o"&gt;&lt;/i&gt;</span></div><div class="line"><span class="attr">  page_pv_footer:</span></div></pre></td></tr></table></figure>
<p>相关：<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">http://ibruce.info/2015/04/04/busuanzi/</a><br>例：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="attr">busuanzi_count:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  site_uv:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  site_uv_header:</span> <span class="string">本站访客数</span></div><div class="line"><span class="attr">  site_uv_footer:</span> <span class="string">人次</span></div><div class="line"><span class="attr">  site_pv:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  site_pv_header:</span> <span class="string">本站总访问量</span></div><div class="line"><span class="attr">  site_pv_footer:</span> <span class="string">次</span></div><div class="line"><span class="attr">  page_pv:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  page_pv_header:</span> <span class="string">本文总阅读量</span></div><div class="line"><span class="attr">  page_pv_footer:</span> <span class="string">次</span></div></pre></td></tr></table></figure></p>
<h3 id="腾讯分析"><a href="#腾讯分析" class="headerlink" title="腾讯分析"></a>腾讯分析</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">tencent_analytics:</span></div></pre></td></tr></table></figure>
<p>移动分析<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">tencent_mta:</span></div></pre></td></tr></table></figure></p>
<h3 id="推送百度"><a href="#推送百度" class="headerlink" title="推送百度"></a>推送百度</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>自动把博客推送到百度上，更容易被搜索。</p>
<h3 id="Google-日历"><a href="#Google-日历" class="headerlink" title="Google 日历"></a>Google 日历</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="attr">calendar:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  calendar_id:</span> <span class="string">&lt;required&gt;</span></div><div class="line"><span class="attr">  api_key:</span> <span class="string">&lt;required&gt;</span></div><div class="line"><span class="attr">  orderBy:</span> <span class="string">startTime</span></div><div class="line"><span class="attr">  offsetMax:</span> <span class="number">24</span></div><div class="line"><span class="attr">  offsetMin:</span> <span class="number">4</span></div><div class="line"><span class="attr">  timeZone:</span></div><div class="line"><span class="attr">  showDeleted:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  singleEvents:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  maxResults:</span> <span class="number">250</span></div></pre></td></tr></table></figure>
<p>相关：<a href="https://developers.google.com/google-apps/calendar/v3/reference/events/list" target="_blank" rel="external">https://developers.google.com/google-apps/calendar/v3/reference/events/list</a></p>
<h3 id="Algolia-搜索"><a href="#Algolia-搜索" class="headerlink" title="Algolia 搜索"></a>Algolia 搜索</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="attr">algolia_search:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  hits:</span></div><div class="line"><span class="attr">    per_page:</span> <span class="number">10</span></div><div class="line"><span class="attr">  labels:</span></div><div class="line"><span class="attr">    input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></div><div class="line"><span class="attr">    hits_empty:</span> <span class="string">"We didn't find any results for the search: $&#123;query&#125;"</span></div><div class="line"><span class="attr">    hits_stats:</span> <span class="string">"$&#123;hits&#125; results found in $&#123;time&#125; ms"</span></div></pre></td></tr></table></figure>
<h3 id="Local-搜索"><a href="#Local-搜索" class="headerlink" title="Local 搜索"></a>Local 搜索</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">local_search:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  trigger:</span> <span class="string">aut</span></div><div class="line"><span class="attr">  top_n_per_article:</span> <span class="number">1</span></div></pre></td></tr></table></figure>
<p>相关：<a href="https://github.com/flashlab/hexo-generator-search" target="_blank" rel="external">https://github.com/flashlab/hexo-generator-search</a></p>
<hr>
<h2 id="动画设置"><a href="#动画设置" class="headerlink" title="动画设置"></a>动画设置</h2><h3 id="加载动画"><a href="#加载动画" class="headerlink" title="加载动画"></a>加载动画</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">use_motion:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>加载页面时的动画是否开启。</p>
<h3 id="背景动画"><a href="#背景动画" class="headerlink" title="背景动画"></a>背景动画</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">canvas_nest:</span> <span class="literal">false</span></div><div class="line"><span class="attr">three_waves:</span> <span class="literal">false</span></div><div class="line"><span class="attr">canvas_lines:</span> <span class="literal">false</span></div><div class="line"><span class="attr">canvas_sphere:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<p>四种背景动画只能选一种改为true，不过不建议开启，影响注意力。</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上期链接：&lt;a href=&quot;http://gaufoo.com/2017/08/23/Hexo下的NexT主题配置（一）/&quot;&gt;http://gaufoo.com/2017/08/23/Hexo下的NexT主题配置（一）/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo教程" scheme="http://gaufoo.com/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo" scheme="http://gaufoo.com/tags/Hexo/"/>
    
      <category term="配置" scheme="http://gaufoo.com/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>C之32位二进制数内1的个数求法</title>
    <link href="http://gaufoo.com/2017/09/05/C%E4%B9%8B32%E4%BD%8D%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E5%86%851%E7%9A%84%E4%B8%AA%E6%95%B0%E6%B1%82%E6%B3%95/"/>
    <id>http://gaufoo.com/2017/09/05/C之32位二进制数内1的个数求法/</id>
    <published>2017-09-05T13:43:00.000Z</published>
    <updated>2017-09-06T09:16:51.288Z</updated>
    
    <content type="html"><![CDATA[<p>《CSAPP》上的题目，略有难度。</p>
<a id="more"></a>
<hr>
<h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><ol>
<li>编程语言：C</li>
<li>可用操作符：! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</li>
<li>最大操作步数：40</li>
<li>最大操作数：255</li>
</ol>
<hr>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h3 id="获取2位二进制数内”1”个数"><a href="#获取2位二进制数内”1”个数" class="headerlink" title="获取2位二进制数内”1”个数"></a>获取2位二进制数内”1”个数</h3><p>设该数为<code>x</code>，则答案易得为<code>(x &amp; 01) + ((x &gt;&gt; 1) &amp; 01)</code></p>
<h3 id="获取4位二进制数内”1”个数"><a href="#获取4位二进制数内”1”个数" class="headerlink" title="获取4位二进制数内”1”个数"></a>获取4位二进制数内”1”个数</h3><p>设该数为<code>x</code><br>可以先把每两位的”1”个数求出，再加起来。</p>
<ol>
<li><code>y = (x &amp; 0101) + ((x &gt;&gt; 1) &amp; 0101)</code></li>
<li><code>count = (y &amp; 0011) + ((y &gt;&gt; 10) &amp; 0011)</code></li>
</ol>
<h3 id="获取8位二进制数内”1”个数"><a href="#获取8位二进制数内”1”个数" class="headerlink" title="获取8位二进制数内”1”个数"></a>获取8位二进制数内”1”个数</h3><p>设该数为<code>x</code><br>把每两位的”1”个数求出，存储在每两位中。再把每四位的”1”个数求出，存储在每四位中。最后加起来。</p>
<ol>
<li><code>y = (x &amp; 01010101) + ((x &gt;&gt; 1) &amp; 01010101)</code></li>
<li><code>z = (y &amp; 00110011) + ((y &gt;&gt; 10) &amp; 00110011)</code></li>
<li><code>count = (z &amp; 00001111) + ((z &gt;&gt; 1000) &amp; 00001111)</code></li>
</ol>
<p>···<br>···<br>···</p>
<h3 id="获取32位二进制数内”1”个数"><a href="#获取32位二进制数内”1”个数" class="headerlink" title="获取32位二进制数内”1”个数"></a>获取32位二进制数内”1”个数</h3><ol>
<li>每两位数存”1”的个数：<br><code>storePer2 = (0x???????? &amp; 0x55555555) + ((0x???????? &gt;&gt; 1) &amp; 0x55555555)</code></li>
<li>每四位数存”1”的个数：<br><code>storePer4 = (storePer2 &amp; 0x33333333) + ((storePer2 &gt;&gt; 2) &amp; 0x33333333)</code></li>
<li>每八位数存”1”的个数：<br><code>storePer8 = (storePer4 &amp; 0x0f0f0f0f) + ((storePer4 &gt;&gt; 4) &amp; 0x0f0f0f0f)</code></li>
<li>每十六位数存”1”的个数：<br><code>storePer16 = (storePer8 &amp; 0x00ff00ff) + ((storePer8 &gt;&gt; 8) &amp; 0x00ff00ff)</code></li>
<li>用32位数来存储结果：<br><code>count = (storePer16 &amp; 0x0000ffff) + ((storePer16 &gt;&gt; 16) &amp; 0x0000ffff)</code></li>
</ol>
<hr>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment"> * bitCount - returns count of number of 1's in word</span></div><div class="line"><span class="comment"> *   Examples: bitCount(5) = 2, bitCount(7) = 3</span></div><div class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></div><div class="line"><span class="comment"> *   Max ops: 40</span></div><div class="line"><span class="comment"> *   Rating: 4</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">bitCount</span><span class="params">(<span class="keyword">int</span> x)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="keyword">int</span> tmpMask1 = (<span class="number">0x55</span>) | (<span class="number">0x55</span> &lt;&lt; <span class="number">8</span>);</div><div class="line">	<span class="keyword">int</span> mask1 = (tmpMask1) | (tmpMask1 &lt;&lt; <span class="number">16</span>);</div><div class="line">	<span class="keyword">int</span> tmpMask2 = (<span class="number">0x33</span>) | (<span class="number">0x33</span> &lt;&lt; <span class="number">8</span>);</div><div class="line">	<span class="keyword">int</span> mask2 = (tmpMask2) | (tmpMask2 &lt;&lt; <span class="number">16</span>);</div><div class="line">	<span class="keyword">int</span> tmpMask3 = (<span class="number">0x0f</span>) | (<span class="number">0x0f</span> &lt;&lt; <span class="number">8</span>);</div><div class="line">	<span class="keyword">int</span> mask3 = (tmpMask3) | (tmpMask3 &lt;&lt; <span class="number">16</span>);</div><div class="line">	<span class="keyword">int</span> mask4 = (<span class="number">0xff</span>) | (<span class="number">0xff</span> &lt;&lt; <span class="number">16</span>);</div><div class="line">	<span class="keyword">int</span> mask5 = (<span class="number">0xff</span>) | (<span class="number">0xff</span> &lt;&lt; <span class="number">8</span>);</div><div class="line">	<span class="keyword">int</span> count = x;</div><div class="line">	count = (count &amp; mask1) + ((count &gt;&gt; <span class="number">1</span>) &amp; mask1);</div><div class="line">	count = (count &amp; mask2) + ((count &gt;&gt; <span class="number">2</span>) &amp; mask2);</div><div class="line">	count = (count &amp; mask3) + ((count &gt;&gt; <span class="number">4</span>) &amp; mask3);</div><div class="line">	count = (count &amp; mask4) + ((count &gt;&gt; <span class="number">8</span>) &amp; mask4);</div><div class="line">	count = (count &amp; mask5) + ((count &gt;&gt; <span class="number">16</span>) &amp; mask5);</div><div class="line">	<span class="keyword">return</span> count;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"bitCount(5) = %d\nbitCount(7) = %d\n"</span>, bitCount(<span class="number">5</span>), bitCount(<span class="number">7</span>));</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《CSAPP》上的题目，略有难度。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="C" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/C/"/>
    
    
      <category term="C" scheme="http://gaufoo.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Python之Re库学习笔记</title>
    <link href="http://gaufoo.com/2017/09/05/Python%E4%B9%8BRe%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://gaufoo.com/2017/09/05/Python之Re库学习笔记/</id>
    <published>2017-09-05T09:05:00.000Z</published>
    <updated>2017-09-06T09:17:49.869Z</updated>
    
    <content type="html"><![CDATA[<p>记录以备后用</p>
<a id="more"></a>
<hr>
<h2 id="正则表达式的使用"><a href="#正则表达式的使用" class="headerlink" title="正则表达式的使用"></a>正则表达式的使用</h2><h3 id="常用操作符"><a href="#常用操作符" class="headerlink" title="常用操作符"></a>常用操作符</h3><table>
<thead>
<tr>
<th>操作符</th>
<th>说明</th>
<th>实例</th>
</tr>
</thead>
<tbody>
<tr>
<td>.</td>
<td>表示任何单个字符</td>
<td>-</td>
</tr>
<tr>
<td>[ ]</td>
<td>字符集，对单个字符给出取值范围</td>
<td>[abc]表示a、b、c，[a‐z]表示a到z单个字符</td>
</tr>
<tr>
<td>[^ ]</td>
<td>非字符集，对单个字符给出排除范围</td>
<td>[^abc]表示非a或b或c的单个字符</td>
</tr>
<tr>
<td>*</td>
<td>前一个字符0次或无限次扩展</td>
<td>abc* 表示 ab、abc、abcc、abccc等</td>
</tr>
<tr>
<td>+</td>
<td>前一个字符1次或无限次扩展</td>
<td>abc+ 表示 abc、abcc、abccc等</td>
</tr>
<tr>
<td>?</td>
<td>前一个字符0次或1次扩展</td>
<td>abc? 表示 ab、abc</td>
</tr>
<tr>
<td>&#124;</td>
<td>左右表达式任意一个</td>
<td>abc&#124;def 表示 abc、def</td>
</tr>
<tr>
<td>{m}</td>
<td>扩展前一个字符m次</td>
<td>ab{2}c表示abbc</td>
</tr>
<tr>
<td>{m,n}</td>
<td>扩展前一个字符m至n次（含n）</td>
<td>ab{1,2}c表示abc、abbc</td>
</tr>
<tr>
<td>^</td>
<td>匹配字符串开头</td>
<td>^abc表示abc且在一个字符串的开头</td>
</tr>
<tr>
<td>$</td>
<td>匹配字符串结尾</td>
<td>abc$表示abc且在一个字符串的结尾</td>
</tr>
<tr>
<td>( )</td>
<td>分组标记，内部只能使用 &#124; 操作符</td>
<td>(abc)表示abc，(abc&#124;def)表示abc、def</td>
</tr>
<tr>
<td>\d</td>
<td>数字，等价于[0-9]</td>
<td>-</td>
</tr>
<tr>
<td>\w</td>
<td>单词字符，等价于[A-Za-z0-9_]</td>
<td>-</td>
</tr>
</tbody>
</table>
<hr>
<h3 id="经典正则表达式实例"><a href="#经典正则表达式实例" class="headerlink" title="经典正则表达式实例"></a>经典正则表达式实例</h3><ul>
<li><code>^[A‐Za‐z]+$</code>：由26个字母组成的字符串</li>
<li><code>^[A‐Za‐z0‐9]+$</code>：由26个字母和数字组成的字符串</li>
<li><code>^‐?\d+$</code>：整数形式的字符串</li>
<li><code>[1‐9]\d{5}</code>：中国境内邮政编码，6位</li>
<li><code>[\u4e00‐\u9fa5]</code>：匹配中文字符、</li>
<li><code>\d{3}‐\d{8}|\d{4}‐\d{7}</code>：国内电话号码，010‐68913536</li>
<li>IP地址<ul>
<li>0-99：<code>[1‐9]?\d</code></li>
<li>100-199：<code>1\d{2}</code></li>
<li>200-249：<code>2[0‐4]\d</code></li>
<li>250-255：<code>25[0‐5]</code></li>
<li>总：<code>(([1‐9]?\d|1\d{2}|2[0‐4]\d|25[0‐5]).){3}([1‐9]?\d|1\d{2}|2[0‐4]\d|25[0‐5])</code></li>
</ul>
</li>
</ul>
<hr>
<h2 id="Re库主要功能函数"><a href="#Re库主要功能函数" class="headerlink" title="Re库主要功能函数"></a>Re库主要功能函数</h2><h3 id="re-search-pattern-string-flags-0"><a href="#re-search-pattern-string-flags-0" class="headerlink" title="re.search(pattern, string, flags=0)"></a>re.search(pattern, string, flags=0)</h3><p>在一个字符串中搜索匹配正则表达式的第一个位置，返回match对象</p>
<ul>
<li><code>pattern</code>：正则表达式的字符串或原生字符串表示</li>
<li><code>string</code>：待匹配字符串</li>
<li><code>flags</code>：正则表达式使用时的控制标记<ul>
<li><code>re.I</code> - re.IGNORECASE：忽略正则表达式的大小写，[A‐Z]能够匹配小写字符</li>
<li><code>re.M</code> - re.MULTILINE：正则表达式中的^操作符能够将给定字符串的每行当作匹配开始</li>
<li><code>re.S</code> - re.DOTALL：正则表达式中的.操作符能够匹配所有字符，默认匹配除换行外的所有字符</li>
</ul>
</li>
</ul>
<hr>
<h3 id="re-match-pattern-string-flags-0"><a href="#re-match-pattern-string-flags-0" class="headerlink" title="re.match(pattern, string, flags=0)"></a>re.match(pattern, string, flags=0)</h3><p>从一个字符串的开始位置起匹配正则表达式，返回match对象</p>
<ul>
<li><code>pattern</code>：正则表达式的字符串或原生字符串表示</li>
<li><code>string</code>：待匹配字符串</li>
<li><code>flags</code>：正则表达式使用时的控制标记<ul>
<li><code>re.I</code> - re.IGNORECASE：忽略正则表达式的大小写，[A‐Z]能够匹配小写字符</li>
<li><code>re.M</code> - re.MULTILINE：正则表达式中的^操作符能够将给定字符串的每行当作匹配开始</li>
<li><code>re.S</code> - re.DOTALL：正则表达式中的.操作符能够匹配所有字符，默认匹配除换行外的所有字符</li>
</ul>
</li>
</ul>
<hr>
<h3 id="re-findall-pattern-string-flags-0"><a href="#re-findall-pattern-string-flags-0" class="headerlink" title="re.findall(pattern, string, flags=0)"></a>re.findall(pattern, string, flags=0)</h3><p>搜索字符串，以列表类型返回全部能匹配的子串</p>
<ul>
<li><code>pattern</code>：正则表达式的字符串或原生字符串表示</li>
<li><code>string</code>：待匹配字符串</li>
<li><code>flags</code>：正则表达式使用时的控制标记<ul>
<li><code>re.I</code> - re.IGNORECASE：忽略正则表达式的大小写，[A‐Z]能够匹配小写字符</li>
<li><code>re.M</code> - re.MULTILINE：正则表达式中的^操作符能够将给定字符串的每行当作匹配开始</li>
<li><code>re.S</code> - re.DOTALL：正则表达式中的.操作符能够匹配所有字符，默认匹配除换行外的所有字符</li>
</ul>
</li>
</ul>
<hr>
<h3 id="re-split-pattern-string-maxsplit-0-flags-0"><a href="#re-split-pattern-string-maxsplit-0-flags-0" class="headerlink" title="re.split(pattern, string, maxsplit=0, flags=0)"></a>re.split(pattern, string, maxsplit=0, flags=0)</h3><p>将一个字符串按照正则表达式匹配结果进行分割，返回列表类型</p>
<ul>
<li><code>pattern</code>：正则表达式的字符串或原生字符串表示</li>
<li><code>string</code>：待匹配字符串</li>
<li><code>maxsplit</code>：最大分割数，剩余部分作为最后一个元素输出</li>
<li><code>flags</code>：正则表达式使用时的控制标记<ul>
<li><code>re.I</code> - re.IGNORECASE：忽略正则表达式的大小写，[A‐Z]能够匹配小写字符</li>
<li><code>re.M</code> - re.MULTILINE：正则表达式中的^操作符能够将给定字符串的每行当作匹配开始</li>
<li><code>re.S</code> - re.DOTALL：正则表达式中的.操作符能够匹配所有字符，默认匹配除换行外的所有字符</li>
</ul>
</li>
</ul>
<hr>
<h3 id="re-finditer-pattern-string-flags-0"><a href="#re-finditer-pattern-string-flags-0" class="headerlink" title="re.finditer(pattern, string, flags=0)"></a>re.finditer(pattern, string, flags=0)</h3><p>搜索字符串，返回一个匹配结果的迭代类型，每个迭代元素是match对象</p>
<ul>
<li><code>pattern</code>：正则表达式的字符串或原生字符串表示</li>
<li><code>string</code>：待匹配字符串</li>
<li><code>flags</code>：正则表达式使用时的控制标记<ul>
<li><code>re.I</code> - re.IGNORECASE：忽略正则表达式的大小写，[A‐Z]能够匹配小写字符</li>
<li><code>re.M</code> - re.MULTILINE：正则表达式中的^操作符能够将给定字符串的每行当作匹配开始</li>
<li><code>re.S</code> - re.DOTALL：正则表达式中的.操作符能够匹配所有字符，默认匹配除换行外的所有字符</li>
</ul>
</li>
</ul>
<hr>
<h3 id="re-sub-pattern-repl-string-count-0-flags-0"><a href="#re-sub-pattern-repl-string-count-0-flags-0" class="headerlink" title="re.sub(pattern, repl, string, count=0, flags=0)"></a>re.sub(pattern, repl, string, count=0, flags=0)</h3><p>在一个字符串中替换所有匹配正则表达式的子串，返回替换后的字符串</p>
<ul>
<li><code>pattern</code>：正则表达式的字符串或原生字符串表示</li>
<li><code>repl</code>：替换匹配字符串的字符串</li>
<li><code>string</code>：待匹配字符串</li>
<li><code>count</code>：匹配的最大替换次数</li>
<li><code>flags</code>：正则表达式使用时的控制标记<ul>
<li><code>re.I</code> - re.IGNORECASE：忽略正则表达式的大小写，[A‐Z]能够匹配小写字符</li>
<li><code>re.M</code> - re.MULTILINE：正则表达式中的^操作符能够将给定字符串的每行当作匹配开始</li>
<li><code>re.S</code> - re.DOTALL：正则表达式中的.操作符能够匹配所有字符，默认匹配除换行外的所有字符</li>
</ul>
</li>
</ul>
<hr>
<h3 id="Re库另一种等价用法"><a href="#Re库另一种等价用法" class="headerlink" title="Re库另一种等价用法"></a>Re库另一种等价用法</h3><p><strong>regex = re.compile(pattern, flags=0)</strong><br>将正则表达式的字符串形式编译成正则表达式对象</p>
<ul>
<li><code>pattern</code>：正则表达式的字符串或原生字符串表示</li>
<li><code>flags</code>：正则表达式使用时的控制标记<ul>
<li><code>re.I</code> - re.IGNORECASE：忽略正则表达式的大小写，[A‐Z]能够匹配小写字符</li>
<li><code>re.M</code> - re.MULTILINE：正则表达式中的^操作符能够将给定字符串的每行当作匹配开始</li>
<li><code>re.S</code> - re.DOTALL：正则表达式中的.操作符能够匹配所有字符，默认匹配除换行外的所有字符</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>regex.search()</td>
<td>在一个字符串中搜索匹配正则表达式的第一个位置，返回match对象</td>
</tr>
<tr>
<td>regex.match()</td>
<td>从一个字符串的开始位置起匹配正则表达式，返回match对象</td>
</tr>
<tr>
<td>regex.findall()</td>
<td>搜索字符串，以列表类型返回全部能匹配的子串</td>
</tr>
<tr>
<td>regex.split()</td>
<td>将一个字符串按照正则表达式匹配结果进行分割，返回列表类型</td>
</tr>
<tr>
<td>regex.finditer()</td>
<td>搜索字符串，返回一个匹配结果的迭代类型，每个迭代元素是match对象</td>
</tr>
<tr>
<td>regex.sub()</td>
<td>在一个字符串中替换所有匹配正则表达式的子串，返回替换后的字符串</td>
</tr>
</tbody>
</table>
<hr>
<h2 id="Re库的Match对象"><a href="#Re库的Match对象" class="headerlink" title="Re库的Match对象"></a>Re库的Match对象</h2><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><ul>
<li><code>.string</code>：待匹配的文本</li>
<li><code>.re</code>：匹配时使用的patter对象（正则表达式）</li>
<li><code>.pos</code>：正则表达式搜索文本的开始位置</li>
<li><code>.endpos</code>：正则表达式搜索文本的结束位置</li>
</ul>
<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul>
<li><code>.group(0)</code>：获得匹配后的字符串</li>
<li><code>.start()</code>：匹配字符串在原始字符串的开始位置</li>
<li><code>.end()</code>：匹配字符串在原始字符串的结束位置</li>
<li><code>.span()</code>：返回(.start(), .end())</li>
</ul>
<hr>
<h2 id="Re库的贪婪匹配和最小匹配"><a href="#Re库的贪婪匹配和最小匹配" class="headerlink" title="Re库的贪婪匹配和最小匹配"></a>Re库的贪婪匹配和最小匹配</h2><p>Re库默认采用贪婪匹配，即输出匹配最长的子串<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>match = re.search(<span class="string">r'PY.*N'</span>, <span class="string">'PYANBNCNDN'</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>match.group(<span class="number">0</span>)</div><div class="line"><span class="string">'PYANBNCNDN'</span></div></pre></td></tr></table></figure></p>
<h3 id="最小匹配操作符"><a href="#最小匹配操作符" class="headerlink" title="最小匹配操作符"></a>最小匹配操作符</h3><p>只要长度输出可能不同的，都可以通过在操作符后增加?变成最小匹配</p>
<ul>
<li><code>*?</code>：前一个字符0次或无限次扩展，最小匹配</li>
<li><code>+?</code>：前一个字符1次或无限次扩展，最小匹配</li>
<li><code>??</code>：前一个字符0次或1次扩展，最小匹配</li>
<li><code>{m,n}?</code>：扩展前一个字符m至n次（含n），最小匹配</li>
</ul>
<p>输出最短的子串<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>match = re.search(<span class="string">r'PY.*?N'</span>, <span class="string">'PYANBNCNDN'</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>match.group(<span class="number">0</span>)</div><div class="line"><span class="string">'PYAN'</span></div></pre></td></tr></table></figure></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录以备后用&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Python" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/Python/"/>
    
    
      <category term="Python" scheme="http://gaufoo.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令，持续更新</title>
    <link href="http://gaufoo.com/2017/09/05/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%8C%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
    <id>http://gaufoo.com/2017/09/05/Linux常用命令，持续更新/</id>
    <published>2017-09-05T07:14:00.000Z</published>
    <updated>2017-09-06T09:17:26.979Z</updated>
    
    <content type="html"><![CDATA[<p>记录<br><a id="more"></a></p>
<hr>
<h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><table>
<thead>
<tr>
<th>按键</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Ctrl+d</code></td>
<td>键盘输入结束或退出终端</td>
</tr>
<tr>
<td><code>Ctrl+s</code></td>
<td>暂停当前程序，暂停后按下任意键恢复运行</td>
</tr>
<tr>
<td><code>Ctrl+z</code></td>
<td>将当前程序放到后台运行，恢复到前台为命令<code>fg</code></td>
</tr>
<tr>
<td><code>Ctrl+a</code></td>
<td>将光标移至输入行头，相当于<code>Home</code></td>
</tr>
<tr>
<td><code>Ctrl+e</code></td>
<td>将光标移至输入行末，相当于<code>End</code></td>
</tr>
<tr>
<td><code>Ctrl+k</code></td>
<td>删除从光标所在位置到行末</td>
</tr>
<tr>
<td><code>Alt+Backspave</code></td>
<td>向前删除一个单词</td>
</tr>
</tbody>
</table>
<hr>
<h2 id="常用通配符"><a href="#常用通配符" class="headerlink" title="常用通配符"></a>常用通配符</h2><table>
<thead>
<tr>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>*</code></td>
<td>匹配0或多个字符</td>
</tr>
<tr>
<td><code>?</code></td>
<td>匹配任意一个字符</td>
</tr>
<tr>
<td><code>[list]</code></td>
<td>匹配list中的任意单一字符</td>
</tr>
<tr>
<td><code>[!list]</code></td>
<td>匹配除list中的任意单一字符</td>
</tr>
<tr>
<td><code>[c1-c2]</code></td>
<td>匹配c1-c2中的任意单一字符 如：<code>[0-9]</code> <code>[a-z]</code></td>
</tr>
<tr>
<td><code>{string1,string2,...}</code></td>
<td>匹配string1或string2（或更多）其一字符串</td>
</tr>
<tr>
<td><code>{c1..c2}</code></td>
<td>匹配c1-c2中全部字符 如{1..10}</td>
</tr>
</tbody>
</table>
<hr>
<h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h2><h3 id="查看文件权限"><a href="#查看文件权限" class="headerlink" title="查看文件权限"></a>查看文件权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> ls -l</span></div><div class="line">drwxr-xr-x 2 gaufoo gaufoo 4096 11月 6 15:30 Document</div></pre></td></tr></table></figure>
<ul>
<li>文件类型<br> <code>d</code>：目录<br> <code>l</code>：软链接<br> <code>b</code>：块设备<br> <code>c</code>：字符设备<br> <code>s</code>：socket<br> <code>p</code>：管道<br> <code>-</code>：普通文件</li>
<li>文件权限<br> <code>r</code>：读<br> <code>w</code>：写<br> <code>x</code>：执行 </li>
</ul>
<h3 id="变更文件所有者"><a href="#变更文件所有者" class="headerlink" title="变更文件所有者"></a>变更文件所有者</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> sudo chown ??? ???</span></div></pre></td></tr></table></figure>
<h3 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> chmod 700 ???</span></div></pre></td></tr></table></figure>
<h2 id="文件基本操作"><a href="#文件基本操作" class="headerlink" title="文件基本操作"></a>文件基本操作</h2><h3 id="复制目录"><a href="#复制目录" class="headerlink" title="复制目录"></a>复制目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> cp -r ??? ???</span></div></pre></td></tr></table></figure>
<h3 id="删除目录"><a href="#删除目录" class="headerlink" title="删除目录"></a>删除目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> rm -r ???</span></div></pre></td></tr></table></figure>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://gaufoo.com/categories/Linux/"/>
    
      <category term="命令" scheme="http://gaufoo.com/categories/Linux/%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://gaufoo.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>操作系统boot实验报告</title>
    <link href="http://gaufoo.com/2017/09/03/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9Fboot%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    <id>http://gaufoo.com/2017/09/03/操作系统boot实验报告/</id>
    <published>2017-09-03T07:14:00.000Z</published>
    <updated>2017-09-06T09:18:08.350Z</updated>
    
    <content type="html"><![CDATA[<p>HIT操作系统课程第一个实验。</p>
<a id="more"></a>
<hr>
<h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><ul>
<li>熟悉hit-oslab实验环境；</li>
<li>建立对操作系统引导过程的深入认识；</li>
<li>掌握操作系统的基本开发过程；</li>
<li>能对操作系统代码进行简单的控制，揭开操作系统的神秘面纱。</li>
</ul>
<hr>
<h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><p>此次实验的基本内容是：</p>
<ol>
<li>阅读《Linux内核完全注释》的第6章，对计算机和Linux 0.11的引导过程进行初步的了解；</li>
<li>按照下面的要求改写0.11的引导程序bootsect.s</li>
<li>有兴趣同学可以做做进入保护模式前的设置程序setup.s。</li>
</ol>
<p>改写bootsect.s主要完成如下功能：</p>
<ol>
<li>bootsect.s能在屏幕上打印一段提示信息“XXX is booting…”，其中XXX是你给自己的操作系统起的名字，例如LZJos、Sunix等（可以上论坛上秀秀谁的OS名字最帅，也可以显示一个特色logo，以表示自己操作系统的与众不同。）</li>
</ol>
<p>改写setup.s主要完成如下功能：</p>
<ol>
<li>bootsect.s能完成setup.s的载入，并跳转到setup.s开始地址执行。而setup.s向屏幕输出一行”Now we are in SETUP”。</li>
<li>setup.s能获取至少一个基本的硬件参数（如内存参数、显卡参数、硬盘参数等），将其存放在内存的特定地址，并输出到屏幕上。</li>
<li>setup.s不再加载Linux内核，保持上述信息显示在屏幕上即可。</li>
</ol>
<hr>
<h2 id="实验报告要求"><a href="#实验报告要求" class="headerlink" title="实验报告要求"></a>实验报告要求</h2><p>在实验报告中回答如下问题：</p>
<ol>
<li>有时，继承传统意味着别手蹩脚。x86计算机为了向下兼容，导致启动过程比较复杂。请找出x86计算机启动过程中，被硬件强制，软件必须遵守的两个“多此一举”的步骤（多找几个也无妨），说说它们为什么多此一举，并设计更简洁的替代方案。</li>
</ol>
<hr>
<h2 id="实验记录"><a href="#实验记录" class="headerlink" title="实验记录"></a>实验记录</h2><h3 id="改写bootsect-s："><a href="#改写bootsect-s：" class="headerlink" title="改写bootsect.s："></a>改写<code>bootsect.s</code>：</h3><ol>
<li><p>进入目录<code>~/oslab/linux-0.11/boot/</code>，执行<code>$ vi bootsect.s</code>，将<code>bootsect.s</code>修改如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">...</div><div class="line">! Print some inane message</div><div class="line"></div><div class="line">	mov	ah,#0x03		! read cursor pos</div><div class="line">	xor	bh,bh</div><div class="line">	int	0x10</div><div class="line">	</div><div class="line">	mov	cx,#29          ! 修改字符数</div><div class="line">	mov	bx,#0x0007		! page 0, attribute 7 (normal)</div><div class="line">	mov	bp,#msg1</div><div class="line">	mov	ax,#0x1301		! write string, move cursor</div><div class="line">	int	0x10</div><div class="line"></div><div class="line">! ok, we&apos;ve written the message, now</div><div class="line">...</div><div class="line">...</div><div class="line">msg1:</div><div class="line">	.byte 13,10</div><div class="line">	.ascii &quot;Fooooooos is loading...&quot;     ! 修改成自己的字符串</div><div class="line">	.byte 13,10,13,10</div><div class="line">...</div><div class="line">...</div></pre></td></tr></table></figure>
</li>
<li><p>进入目录<code>~/oslab/linux-0.11/boot/</code>，执行：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> as86 -0 -a -o bootsect.o bootsect.s</span></div><div class="line"><span class="meta">$</span><span class="bash"> ld86 -0 -s -o bootsect bootsect.o</span></div><div class="line"><span class="meta">$</span><span class="bash"> dd bs=1 <span class="keyword">if</span>=bootsect of=Image skip=32</span></div><div class="line"><span class="meta">$</span><span class="bash"> cp Image ../</span></div></pre></td></tr></table></figure>
</li>
<li><p>进入目录<code>~/oslab/</code>，执行：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> ./run</span></div></pre></td></tr></table></figure>
</li>
<li><p>实验结果：<br><img src="/images/5193451504415525106-wm.png" alt="实验楼"></p>
</li>
</ol>
<hr>
<h3 id="读入setup-s并输出字符串："><a href="#读入setup-s并输出字符串：" class="headerlink" title="读入setup.s并输出字符串："></a>读入<code>setup.s</code>并输出字符串：</h3><ol>
<li><p>进入目录<code>~/oslab/linux-0.11/boot/</code>，执行<code>$ vi setup.s</code>，删除加载内核的88-223行代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">! Check that there IS a hd1 :-)</div><div class="line"></div><div class="line">	mov	ax,#0x01500</div><div class="line">	mov	dl,#0x81</div><div class="line">	int	0x13</div><div class="line">	jc	no_disk1</div><div class="line">	cmp	ah,#3</div><div class="line">	je	is_disk1</div><div class="line">...</div><div class="line">...</div><div class="line">gdt_48:</div><div class="line">	.word	0x800		! gdt limit=2048, 256 GDT entries</div><div class="line">	.word	512+gdt,0x9	! gdt base = 0X9xxxx</div></pre></td></tr></table></figure>
</li>
<li><p>进入目录<code>~/oslab/linux-0.11/boot/</code>，执行<code>$ vi setup.s</code>，添加代码至<code>start:</code>后，以及末尾：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">...</div><div class="line">start:</div><div class="line"></div><div class="line">! Print some inane message</div><div class="line">	mov ax,cs</div><div class="line">	mov ds,ax</div><div class="line">	mov es,ax</div><div class="line">	mov	ah,#0x03		! read cursor pos</div><div class="line">	xor	bh,bh</div><div class="line">	int	0x10</div><div class="line">	</div><div class="line">	mov	cx,#24</div><div class="line">	mov	bx,#0x0007		! page 0, attribute 7 (normal)</div><div class="line">	mov	bp,#msg1</div><div class="line">	mov	ax,#0x1301		! write string, move cursor</div><div class="line">	int	0x10</div><div class="line">...</div><div class="line">...</div><div class="line">msg1:</div><div class="line">	.byte 13,10</div><div class="line">	.ascii &quot;Now we are in SETUP&quot;</div><div class="line">	.byte 13,10,13,10</div><div class="line">...</div><div class="line">...</div></pre></td></tr></table></figure>
</li>
<li><p>进入目录<code>~/oslab/linux-0.11/tools/</code>，执行<code>$ vi build.c</code>，添加如下代码：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">...</div><div class="line">    <span class="keyword">while</span> (i&lt;SETUP_SECTS*<span class="number">512</span>) &#123;</div><div class="line">    	c = SETUP_SECTS*<span class="number">512</span>-i;</div><div class="line">    	<span class="keyword">if</span> (c &gt; <span class="keyword">sizeof</span>(buf))</div><div class="line">    		c = <span class="keyword">sizeof</span>(buf);</div><div class="line">    	<span class="keyword">if</span> (write(<span class="number">1</span>,buf,c) != c)</div><div class="line">    		die(<span class="string">"Write call failed"</span>);</div><div class="line">    	i += c;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">3</span>], <span class="string">"none"</span>) == <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Ignore system written.\n"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> ((id=open(argv[<span class="number">3</span>],O_RDONLY,<span class="number">0</span>))&lt;<span class="number">0</span>)</div><div class="line">    	die(<span class="string">"Unable to open 'system'"</span>);</div><div class="line">...</div><div class="line">...</div></pre></td></tr></table></figure>
</li>
<li><p>进入目录<code>~/oslab/linux-0.11/</code>，执行：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> make BootImage</span></div></pre></td></tr></table></figure>
</li>
<li><p>进入目录<code>~/oslab/</code>，执行：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> ./run</span></div></pre></td></tr></table></figure>
</li>
<li><p>实验结果：<br><img src="/images/5193451504417795652-wm.png" alt="实验楼"></p>
</li>
</ol>
<hr>
<h3 id="setup-s获取硬件参数，并显示："><a href="#setup-s获取硬件参数，并显示：" class="headerlink" title="setup.s获取硬件参数，并显示："></a><code>setup.s</code>获取硬件参数，并显示：</h3><ol>
<li><p>进入目录<code>~/oslab/linux-0.11/boot/</code>，执行<code>$ vi setup.s</code>，在末尾添加函数如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">...</div><div class="line">print_hex:</div><div class="line">	mov bp,sp</div><div class="line">	add bp,#2</div><div class="line">	mov cx,#4</div><div class="line">	mov dx,(bp)</div><div class="line">print_digit:</div><div class="line">	rol dx,#4</div><div class="line">	mov ax,#0xe0f</div><div class="line">	and al,dl</div><div class="line">	add al,#0x30</div><div class="line">	cmp al,#0x3a</div><div class="line">	jl outp</div><div class="line">	add al,#0x07</div><div class="line">outp:</div><div class="line">	int 0x10</div><div class="line">	loop print_digit</div><div class="line">	ret</div><div class="line">print_nl:</div><div class="line">	mov ax,#0xe0d</div><div class="line">	int 0x10</div><div class="line">	mov al,#0xa</div><div class="line">	int 0x10</div><div class="line">	</div><div class="line">.text</div><div class="line">endtext:</div><div class="line">.data</div><div class="line">enddata:</div><div class="line">.bss</div><div class="line">endbss:</div></pre></td></tr></table></figure>
</li>
<li><p>进入目录<code>~/oslab/linux-0.11/boot/</code>，执行<code>$ vi setup.s</code>，在获取内存大小的模块添加代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">...</div><div class="line">! Get memory size (extended mem, kB)</div><div class="line"></div><div class="line">    	mov	ah,#0x88</div><div class="line">    	int	0x15</div><div class="line">    	mov	[2],ax</div><div class="line"></div><div class="line">        mov     ah,#0x03                ! read cursor pos</div><div class="line">        xor     bh,bh</div><div class="line">        int     0x10</div><div class="line"></div><div class="line">        mov     cx,#14</div><div class="line">        mov     bx,#0x0007              ! page 0, attribute 7 (normal)</div><div class="line">        mov     bp,#memory</div><div class="line">        mov     ax,#0x1301              ! write string, move cursor</div><div class="line">        int     0x10</div><div class="line"></div><div class="line">        push [2]</div><div class="line">        call print_hex</div><div class="line">    	mov ax,#0xe4b</div><div class="line">    	int 0x10			! output &apos;K&apos;</div><div class="line">    	mov al,#0x42</div><div class="line">    	int 0x10			! output &apos;B&apos;</div><div class="line">        call print_nl</div><div class="line">        pop [2]</div><div class="line">...</div><div class="line">...</div></pre></td></tr></table></figure>
</li>
<li><p>进入目录<code>~/oslab/linux-0.11/</code>，执行：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> make BootImage</span></div></pre></td></tr></table></figure>
</li>
<li><p>进入目录<code>~/oslab/</code>，执行：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> ./run</span></div></pre></td></tr></table></figure>
</li>
<li><p>实验结果<br><img src="/images/5193451504420514329-wm.png" alt="实验楼"></p>
</li>
</ol>
<hr>
<h2 id="实验报告"><a href="#实验报告" class="headerlink" title="实验报告"></a>实验报告</h2><ol>
<li>计算机启动时，BIOS把中断表置于内存位置为0的地方，导致引导时必须把system代码先置于其他地方（0x10000），拷贝中断表后，再挪回地址0处。替代方案：BIOS可把中断表放置在其余不影响引导、且方便获取的地方。</li>
<li>由于实模式的地址计算方式保守，导致内存可寻址范围只有1MB，使得需要进入保护模式，才能采用32位地址寻址。替代方案：改变硬件的地址计算方式，使之直接采用32位地址寻址。 </li>
</ol>
<hr>
<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><ul>
<li><a href="http://gaufoo.com/code/lab1/bootsect.s" download="bootsect.s">bootsect.s</a></li>
<li><a href="http://gaufoo.com/code/lab1/setup.s" download="setup.s">setup.s</a></li>
<li><a href="http://gaufoo.com/code/lab1/build.c" download="build.c">build.c</a></li>
</ul>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HIT操作系统课程第一个实验。&lt;/p&gt;
    
    </summary>
    
      <category term="原理" scheme="http://gaufoo.com/categories/%E5%8E%9F%E7%90%86/"/>
    
      <category term="操作系统" scheme="http://gaufoo.com/categories/%E5%8E%9F%E7%90%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="原理" scheme="http://gaufoo.com/tags/%E5%8E%9F%E7%90%86/"/>
    
      <category term="操作系统" scheme="http://gaufoo.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络学习笔记（一）</title>
    <link href="http://gaufoo.com/2017/09/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://gaufoo.com/2017/09/03/计算机网络学习笔记（一）/</id>
    <published>2017-09-02T17:57:00.000Z</published>
    <updated>2017-09-06T09:18:14.944Z</updated>
    
    <content type="html"><![CDATA[<p>记录以备后用</p>
<a id="more"></a>
<hr>
<h2 id="计算机网络定义"><a href="#计算机网络定义" class="headerlink" title="计算机网络定义"></a>计算机网络定义</h2><ul>
<li>计算机网络就是<strong>互连</strong>的、<strong>自治</strong>的计算机集合。<ul>
<li>自治：无主从关系</li>
<li>互连：通过通信链路互联互通</li>
</ul>
</li>
<li>距离远、数量大时，通过<strong>交换网络</strong>互联主机。</li>
</ul>
<hr>
<h2 id="Internet-定义"><a href="#Internet-定义" class="headerlink" title="Internet 定义"></a>Internet 定义</h2><h3 id="组成细节角度"><a href="#组成细节角度" class="headerlink" title="组成细节角度"></a>组成细节角度</h3><ul>
<li>全球最大的<strong>互联网络</strong><ul>
<li>由ISP(Internet Service Provider)网络互连的“网络之网络”</li>
</ul>
</li>
<li>数以百万计的互连的<strong>计算设备</strong>集合<ul>
<li>主机(hosts) == 端系统(end systems)</li>
<li>运行各种网络应用</li>
</ul>
</li>
<li>通信链路<ul>
<li>光纤、铜缆、无线电、卫星……</li>
</ul>
</li>
<li>分组交换：转发分组(数据包)<ul>
<li>路由器(routers)</li>
<li>交换机(switches)</li>
</ul>
</li>
</ul>
<h3 id="服务提供角度"><a href="#服务提供角度" class="headerlink" title="服务提供角度"></a>服务提供角度</h3><ul>
<li>为网络应用提供通信服务<ul>
<li>Web, VolP, email, 电子商务, 社交网络</li>
</ul>
</li>
<li>为网络应用提供编程接口(API)<ul>
<li>支持应用程序“连接”Internet, 发送/接收数据</li>
<li>提供类似于邮政系统的数据传输服务</li>
</ul>
</li>
</ul>
<hr>
<h2 id="网络协议"><a href="#网络协议" class="headerlink" title="网络协议"></a>网络协议</h2><h3 id="类比"><a href="#类比" class="headerlink" title="类比"></a>类比</h3><ul>
<li>交通系统中的交通规则</li>
<li>人类交谈作为信息交换的过程，同样包括交流时间、问题请教、人员引荐等</li>
<li>网络通信<ul>
<li>通信<strong>主体</strong>：机器，而非人</li>
<li>交换“<strong>数字化</strong>”或“<strong>电子化</strong>”信息</li>
<li>所有通信过程必须遵循某些规则：<strong>协议</strong></li>
</ul>
</li>
</ul>
<h3 id="要素"><a href="#要素" class="headerlink" title="要素"></a>要素</h3><ul>
<li><strong>语法(Syntax)</strong><ul>
<li>数据与控制信息的结构或格式</li>
<li>信号电平</li>
</ul>
</li>
<li><strong>语义(Semantics)</strong><ul>
<li>需要发出何种控制信息</li>
<li>完成何种动作以及做出何种响应</li>
<li>差错控制</li>
</ul>
</li>
<li><strong>时序(Timing)</strong><ul>
<li>事件顺序</li>
<li>速度匹配</li>
</ul>
</li>
</ul>
<h3 id="Internet-协议标准"><a href="#Internet-协议标准" class="headerlink" title="Internet 协议标准"></a>Internet 协议标准</h3><ul>
<li>RFC：Request for Comments</li>
<li>IETF：互联网工程任务组(Internet Engineering Task Force)</li>
</ul>
<hr>
<h2 id="计算机网络结构"><a href="#计算机网络结构" class="headerlink" title="计算机网络结构"></a>计算机网络结构</h2><h3 id="网络边缘"><a href="#网络边缘" class="headerlink" title="网络边缘"></a>网络边缘</h3><ul>
<li>主机（端系统）</li>
<li>网络应用，如：Web，email</li>
<li>模型：<ul>
<li>客户/服务器（client/server）应用模型</li>
<li>对等（peer-peer，P2P）应用模型</li>
</ul>
</li>
</ul>
<h3 id="接入网络、物理介质"><a href="#接入网络、物理介质" class="headerlink" title="接入网络、物理介质"></a>接入网络、物理介质</h3><ul>
<li>有线或无线通信链路<ul>
<li>住宅（家庭）接入网络</li>
<li>机构接入网络（学校、企业等）</li>
<li>移动接入网络</li>
</ul>
</li>
<li>用户关心<ul>
<li>带宽（bps）</li>
<li>共享/独占</li>
</ul>
</li>
<li>类型<ul>
<li>电缆网络 - 频分多路复用</li>
<li>数字用户线路（DSL） - 电话线</li>
<li>Ethernet，端系统通常直接连接以太网交换机（switch）</li>
<li>无线接入网络 - 通过基站或“接入点”<ul>
<li>无线局域网（LANs）</li>
<li>广域无线接入 - 电信运营商（蜂窝网）</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="网络核心（核心网络）"><a href="#网络核心（核心网络）" class="headerlink" title="网络核心（核心网络）"></a>网络核心（核心网络）</h3><ul>
<li>互连的路由器（或分组转发设备）</li>
<li>关键功能：<ul>
<li>路由（routing）</li>
<li>转发（forwarding）</li>
</ul>
</li>
</ul>
<hr>
<h2 id="Internet-结构"><a href="#Internet-结构" class="headerlink" title="Internet 结构"></a>Internet 结构</h2><ul>
<li>端系统通过<strong>接入ISP</strong>（access ISPs）连接到 Internet<ul>
<li>家庭、公司、大学 ISPs</li>
</ul>
</li>
<li>区域网络（regional networks）连接到<strong>接入ISP</strong>和运营商ISP</li>
<li>每一个<strong>接入ISP</strong>连接到大型ISP</li>
<li>大型ISP网络必须互连</li>
<li>网络中心：少数互连的大型网络<ul>
<li><strong>“一级”（tier-1）商业ISPs</strong>（如：网通、电信、Sprint、AT&amp;T），提供国家或国际范围的覆盖</li>
<li><strong>内容提供商网络</strong>（content provider network，如：Google），私有网络，连接其数据中心与Internet</li>
</ul>
</li>
</ul>
<hr>
<h2 id="数据交换"><a href="#数据交换" class="headerlink" title="数据交换"></a>数据交换</h2><h3 id="电路交换"><a href="#电路交换" class="headerlink" title="电路交换"></a>电路交换</h3><ul>
<li>典型：电话网络</li>
<li>阶段<ul>
<li>建立连接</li>
<li>通信</li>
<li>释放资源</li>
</ul>
</li>
<li>特点：独占资源 </li>
<li>解决：多路复用<ul>
<li>特点<ul>
<li>将资源片分配给各路“呼叫”</li>
<li>每路呼叫独占所分配资源</li>
<li>资源片可能闲置（idle）</li>
</ul>
</li>
<li>方法<ul>
<li>频分多路复用（“frequency” FDM）</li>
<li>时分多路复用（“time” TDM）</li>
<li>波分多路复用（“wavelength” WDM）</li>
<li>码分多路复用（“code” CDM）<ul>
<li>每个用户分配一个<strong>码片序列</strong></li>
<li>编码信号 = （原始数据）×（码片序列）</li>
<li>各用户码片序列互相<strong>正交</strong>（orthogonal）</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="报文交换"><a href="#报文交换" class="headerlink" title="报文交换"></a>报文交换</h3><ul>
<li>报文：源（应用）发送信息整体</li>
</ul>
<h3 id="分组交换"><a href="#分组交换" class="headerlink" title="分组交换"></a>分组交换</h3><ul>
<li>分组：报文分拆出来的一系列相对较小的数据包</li>
<li>分组交换需要报文的拆分与重组</li>
<li>产生额外开销</li>
</ul>
<h3 id="报文-vs-分组"><a href="#报文-vs-分组" class="headerlink" title="报文 vs 分组"></a>报文 vs 分组</h3><ul>
<li>两者都是存储转发方式，区别：报文 - 完整报文，分组 - 较小的分组</li>
<li>报文：M bits 链路带宽：R bps 分组长度：L bits 路由器数：n<ul>
<li>分组交换：T = M/R + nL/R</li>
<li>报文交换：T = (n + 1)M/R</li>
</ul>
</li>
<li>分组交换允许更多用户同时使用网络，网络资源充分共享</li>
<li>分组交换缺陷<ol>
<li>适用于突发数据传输网络 </li>
<li>可能发生拥塞（congestion）：分组延迟和丢失 </li>
<li>无电路级性能保障。</li>
</ol>
</li>
</ul>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录以备后用&lt;/p&gt;
    
    </summary>
    
      <category term="原理" scheme="http://gaufoo.com/categories/%E5%8E%9F%E7%90%86/"/>
    
      <category term="计算机网络" scheme="http://gaufoo.com/categories/%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="原理" scheme="http://gaufoo.com/tags/%E5%8E%9F%E7%90%86/"/>
    
      <category term="网络" scheme="http://gaufoo.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Python之BeautifulSoup库学习笔记</title>
    <link href="http://gaufoo.com/2017/09/01/Python%E4%B9%8BBeautifulSoup%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://gaufoo.com/2017/09/01/Python之BeautifulSoup库学习笔记/</id>
    <published>2017-08-31T16:44:09.000Z</published>
    <updated>2017-09-06T09:17:36.587Z</updated>
    
    <content type="html"><![CDATA[<p>记录以备后用</p>
<a id="more"></a>
<hr>
<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup = BeautifulSoup(<span class="string">'&lt;p&gt;data&lt;/p&gt;'</span>, <span class="string">'html.parser'</span>)</div></pre></td></tr></table></figure>
<hr>
<h2 id="基本元素"><a href="#基本元素" class="headerlink" title="基本元素"></a>基本元素</h2><ul>
<li><p><code>Tag</code>：标签，最基本的信息组织单元，分别用&lt;&gt;和&lt;/&gt;标明开头和结尾</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup = BeautifulSoup(<span class="string">'&lt;b class="boldest"&gt;Extremely bold&lt;/b&gt;'</span>, <span class="string">'html.parser'</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tag = soup.b</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>type(tag)</div><div class="line"><span class="comment"># &lt;class 'bs4.element.Tag'&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>Name</code>：标签的名字，<code>&lt;p&gt;…&lt;/p&gt;</code>的名字是’p’，格式：<code>&lt;tag&gt;.name</code></p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>tag.name</div><div class="line"><span class="comment"># u'b'</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tag.name = <span class="string">"blockquote"</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tag</div><div class="line"><span class="comment"># &lt;blockquote class="boldest"&gt;Extremely bold&lt;/blockquote&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>Attributes</code>：标签的属性，字典形式组织，格式：<code>&lt;tag&gt;.attrs</code></p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>tag[<span class="string">'class'</span>]</div><div class="line"><span class="comment"># u'boldest'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tag.attrs</div><div class="line"><span class="comment"># &#123;u'class': u'boldest'&#125;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>tag的属性可以被添加,删除或修改</p>
</blockquote>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>tag[<span class="string">'class'</span>] = <span class="string">'verybold'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tag[<span class="string">'id'</span>] = <span class="number">1</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tag</div><div class="line"><span class="comment"># &lt;blockquote class="verybold" id="1"&gt;Extremely bold&lt;/blockquote&gt;</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> tag[<span class="string">'class'</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> tag[<span class="string">'id'</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tag</div><div class="line"><span class="comment"># &lt;blockquote&gt;Extremely bold&lt;/blockquote&gt;</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tag[<span class="string">'class'</span>]</div><div class="line"><span class="comment"># KeyError: 'class'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(tag.get(<span class="string">'class'</span>))</div><div class="line"><span class="comment"># None</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>NavigableString</code>：标签内非属性字符串，&lt;&gt;…&lt;/&gt;中字符串，格式：<code>&lt;tag&gt;.string</code></p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>tag.string</div><div class="line"><span class="comment"># u'Extremely bold'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>type(tag.string)</div><div class="line"><span class="comment"># &lt;class 'bs4.element.NavigableString'&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>Comment</code>：标签内字符串的注释部分，一种特殊的NavigableString类型</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>markup = <span class="string">"&lt;b&gt;&lt;!--Hey, buddy. Want to buy a used parser?--&gt;&lt;/b&gt;"</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup = BeautifulSoup(markup, <span class="string">'html.parser'</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>comment = soup.b.string</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>type(comment)</div><div class="line"><span class="comment"># &lt;class 'bs4.element.Comment'&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="简单遍历"><a href="#简单遍历" class="headerlink" title="简单遍历"></a>简单遍历</h2><ul>
<li><p>只获得第一个tag</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup.head</div><div class="line"><span class="comment"># &lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup.title</div><div class="line"><span class="comment"># &lt;title&gt;The Dormouse's story&lt;/title&gt;</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup.body.b</div><div class="line"><span class="comment"># &lt;b&gt;The Dormouse's story&lt;/b&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>获得所有tag</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(<span class="string">'a'</span>)</div><div class="line"><span class="comment"># [&lt;a class="sister" href="http://example.com/elsie" id="link1"&gt;Elsie&lt;/a&gt;,</span></div><div class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/lacie" id="link2"&gt;Lacie&lt;/a&gt;,</span></div><div class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/tillie" id="link3"&gt;Tillie&lt;/a&gt;]</span></div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="精确遍历"><a href="#精确遍历" class="headerlink" title="精确遍历"></a>精确遍历</h2><p><code>find_all(name, attrs, recursive, text, **kwargs)</code></p>
<ul>
<li><p><code>name</code>：name 参数可以查找所有名字为 name 的 tag</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(<span class="string">"title"</span>)</div><div class="line"><span class="comment"># [&lt;title&gt;The Dormouse's story&lt;/title&gt;]</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>keywork</code>：搜索时会把该参数当作指定名字 tag 的<strong>属性</strong>来搜索</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(id=<span class="string">'link2'</span>)</div><div class="line"><span class="comment"># [&lt;a class="sister" href="http://example.com/lacie" id="link2"&gt;Lacie&lt;/a&gt;]</span></div></pre></td></tr></table></figure>
<p>  参数值为<code>True</code>，查找所有包含 id 属性的 tag</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(id=<span class="keyword">True</span>)</div><div class="line"><span class="comment"># [&lt;a class="sister" href="http://example.com/elsie" id="link1"&gt;Elsie&lt;/a&gt;,</span></div><div class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/lacie" id="link2"&gt;Lacie&lt;/a&gt;,</span></div><div class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/tillie" id="link3"&gt;Tillie&lt;/a&gt;]</span></div></pre></td></tr></table></figure>
<p>  <code>class_</code>：搜索有指定CSS类名的 tag。因为 class 是 python 的关键字，需要加下横线以区分</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(<span class="string">"a"</span>, class_=<span class="string">"sister"</span>)</div><div class="line"><span class="comment"># [&lt;a class="sister" href="http://example.com/elsie" id="link1"&gt;Elsie&lt;/a&gt;,</span></div><div class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/lacie" id="link2"&gt;Lacie&lt;/a&gt;,</span></div><div class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/tillie" id="link3"&gt;Tillie&lt;/a&gt;]</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>attrs</code>：定义一个字典参数来搜索包含特殊属性的 tag</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>data_soup.find_all(attrs=&#123;<span class="string">"data-foo"</span>: <span class="string">"value"</span>&#125;)</div><div class="line"><span class="comment"># [&lt;div data-foo="value"&gt;foo!&lt;/div&gt;]</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>text</code>：搜索文档中的字符串内容</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(<span class="string">"a"</span>, text=<span class="string">"Elsie"</span>)</div><div class="line"><span class="comment"># [&lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;Elsie&lt;/a&gt;]</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>limit</code>：限制返回结果的<strong>数量</strong></p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(<span class="string">"a"</span>, limit=<span class="number">2</span>)</div><div class="line"><span class="comment"># [&lt;a class="sister" href="http://example.com/elsie" id="link1"&gt;Elsie&lt;/a&gt;,</span></div><div class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/lacie" id="link2"&gt;Lacie&lt;/a&gt;]</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>recursive</code>：value为False时，搜索tag的直接子节点</p>
</li>
</ul>
<hr>
<p><code>find(name, attrs, recursive, text, **kwargs)</code></p>
<p>与<code>find_all()</code>的区别：</p>
<ul>
<li><p><code>find()</code>只得到一个结果，<code>find_all()</code>得到结果的列表</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(<span class="string">'title'</span>, limit=<span class="number">1</span>)</div><div class="line"><span class="comment"># [&lt;title&gt;The Dormouse's story&lt;/title&gt;]</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find(<span class="string">'title'</span>)</div><div class="line"><span class="comment"># &lt;title&gt;The Dormouse's story&lt;/title&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>find_all()</code>方法没有找到目标是返回空列表，<code>find()</code> 方法找不到目标时,返回 None</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(soup.find(<span class="string">"nosuchtag"</span>))</div><div class="line"><span class="comment"># None</span></div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="标签树的下行遍历"><a href="#标签树的下行遍历" class="headerlink" title="标签树的下行遍历"></a>标签树的下行遍历</h2><ul>
<li><code>.contents</code>：子节点的<strong>列表</strong>，将<tag>所有儿子节点存入列表</tag></li>
<li><code>.children</code>： 子节点的<strong>迭代类型</strong>，与<code>.contents</code>类似，用于循环遍历儿子节点</li>
<li><code>.descendants</code>： 子孙节点的<strong>迭代类型</strong>，包含所有子孙节点，用于循环遍历</li>
</ul>
<hr>
<h2 id="标签树的上行遍历"><a href="#标签树的上行遍历" class="headerlink" title="标签树的上行遍历"></a>标签树的上行遍历</h2><ul>
<li><code>.parent</code>： 节点的父亲标签</li>
<li><code>.parents</code>： 节点先辈标签的<strong>迭代类型</strong>，用于循环遍历先辈节点</li>
</ul>
<hr>
<h2 id="标签树的平行遍历"><a href="#标签树的平行遍历" class="headerlink" title="标签树的平行遍历"></a>标签树的平行遍历</h2><ul>
<li><code>.next_sibling</code>： 返回按照HTML文本顺序的下一个平行节点标签</li>
<li><code>.previous_sibling</code>： 返回按照HTML文本顺序的上一个平行节点标签</li>
<li><code>.next_siblings</code>： <strong>迭代类型</strong>，返回按照HTML文本顺序的后续所有平行节点标签</li>
<li><code>.previous_siblings</code>： <strong>迭代类型</strong>，返回按照HTML文本顺序的前续所有平行节点标签</li>
</ul>
<hr>
<h2 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(soup.prettify())</div></pre></td></tr></table></figure>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录以备后用&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Python" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/Python/"/>
    
    
      <category term="Python" scheme="http://gaufoo.com/tags/Python/"/>
    
      <category term="web" scheme="http://gaufoo.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>生活中的不愉快</title>
    <link href="http://gaufoo.com/2017/09/01/%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E4%B8%8D%E6%84%89%E5%BF%AB/"/>
    <id>http://gaufoo.com/2017/09/01/生活中的不愉快/</id>
    <published>2017-08-31T16:03:35.000Z</published>
    <updated>2017-09-06T09:18:18.241Z</updated>
    
    <content type="html"><![CDATA[<p>总会遇到被气的时刻，还得忍。</p>
<a id="more"></a>
<hr>
<p>总会有人不但不愿欣赏你的作品，甚至乐于践踏你的劳动成果。<br>学不会善良，总该学会尊重吧。学不会尊重，为什么不学学安静呢。<br>至少我还知道远离，五山那家咖啡厅挺不错。</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总会遇到被气的时刻，还得忍。&lt;/p&gt;
    
    </summary>
    
      <category term="不归" scheme="http://gaufoo.com/categories/%E4%B8%8D%E5%BD%92/"/>
    
    
  </entry>
  
  <entry>
    <title>JavaScript之鬼畜百度打砖块</title>
    <link href="http://gaufoo.com/2017/08/31/JavaScript%E4%B9%8B%E9%AC%BC%E7%95%9C%E7%99%BE%E5%BA%A6%E6%89%93%E7%A0%96%E5%9D%97/"/>
    <id>http://gaufoo.com/2017/08/31/JavaScript之鬼畜百度打砖块/</id>
    <published>2017-08-31T15:53:49.000Z</published>
    <updated>2017-09-06T09:17:15.853Z</updated>
    
    <content type="html"><![CDATA[<p>挖坑，待填。</p>
<a id="more"></a>
<hr>
<p>Version 1.1<br>17/09/01更新：修复碰撞判定BUG，优化碰撞算法。</p>
<p>碰撞算法如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">Paddle.collide = <span class="function"><span class="keyword">function</span> (<span class="params">y</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (o.left &gt;= y.left + y.width || o.left + o.width &lt;= y.left) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (o.top &gt;= y.top + y.height || o.top + o.height &lt;= y.top) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> coByLR = <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Math</span>.abs(x.left + x.width - y.left)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> coByTB = <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Math</span>.abs(x.top + x.height - y.top)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> dist = <span class="built_in">Math</span>.min(coByLR(o, y), coByLR(y, o), coByTB(o, y), coByTB(y, o))</div><div class="line">    <span class="keyword">switch</span> (dist) &#123;</div><div class="line">        <span class="keyword">case</span> coByLR(y, o):</div><div class="line">            <span class="keyword">return</span> <span class="string">'L'</span></div><div class="line">        <span class="keyword">case</span> coByLR(o, y):</div><div class="line">            <span class="keyword">return</span> <span class="string">'R'</span></div><div class="line">        <span class="keyword">case</span> coByTB(y, o):</div><div class="line">            <span class="keyword">return</span> <span class="string">'T'</span></div><div class="line">        <span class="keyword">case</span> coByTB(o, y):</div><div class="line">            <span class="keyword">return</span> <span class="string">'B'</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Ball.moveBack = <span class="function"><span class="keyword">function</span> (<span class="params">type</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> t = type</div><div class="line">    <span class="keyword">switch</span> (t) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="string">'L'</span>:</div><div class="line">            o.speedLeft = -<span class="built_in">Math</span>.abs(o.speedLeft)</div><div class="line">            <span class="keyword">break</span></div><div class="line">        <span class="keyword">case</span> <span class="string">'R'</span>:</div><div class="line">            o.speedLeft = <span class="built_in">Math</span>.abs(o.speedLeft)</div><div class="line">            <span class="keyword">break</span></div><div class="line">        <span class="keyword">case</span> <span class="string">'T'</span>:</div><div class="line">            o.speedTop = -<span class="built_in">Math</span>.abs(o.speedTop)</div><div class="line">            <span class="keyword">break</span></div><div class="line">        <span class="keyword">case</span> <span class="string">'B'</span>:</div><div class="line">            o.speedTop = <span class="built_in">Math</span>.abs(o.speedTop)</div><div class="line">            <span class="keyword">break</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>完整代码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global</span>) </span>&#123;</div><div class="line">	<span class="keyword">var</span> Paddle = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="keyword">var</span> text = <span class="built_in">document</span>.querySelector(<span class="string">"span.bg.s_ipt_wr.quickdelete-wrap"</span>)</div><div class="line">		<span class="keyword">var</span> button = <span class="built_in">document</span>.querySelector(<span class="string">"#su"</span>)</div><div class="line">		text.style.position = <span class="string">"fixed"</span></div><div class="line">		button.style.position = <span class="string">"fixed"</span></div><div class="line">		<span class="keyword">var</span> textStyle = text.getClientRects()[<span class="number">0</span>]</div><div class="line">		<span class="keyword">var</span> buttonWidth = button.getClientRects()[<span class="number">0</span>].width</div><div class="line">		button.style.left = (textStyle.left + textStyle.width) + <span class="string">"px"</span></div><div class="line">		<span class="keyword">var</span> o = &#123;</div><div class="line">			text: text,</div><div class="line">			button: button,</div><div class="line">			left: textStyle.left,</div><div class="line">			top: textStyle.top,</div><div class="line">			height: textStyle.height,</div><div class="line">			width: textStyle.width + buttonWidth,</div><div class="line">			speed: <span class="number">15</span>,</div><div class="line">		&#125;</div><div class="line">		o.moveLeft = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">			<span class="keyword">var</span> a = o.left - o.speed</div><div class="line">			<span class="keyword">if</span> (a &lt;= <span class="number">0</span>) &#123;</div><div class="line">				o.left = <span class="number">0</span></div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				o.left = a</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		o.moveRight = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">			<span class="keyword">var</span> a = o.left + o.speed</div><div class="line">			<span class="keyword">if</span> (a + o.width &gt;= <span class="built_in">window</span>.innerWidth) &#123;</div><div class="line">				o.left = <span class="built_in">window</span>.innerWidth - o.width</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				o.left = a</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		o.collide = <span class="function"><span class="keyword">function</span> (<span class="params">y</span>) </span>&#123;</div><div class="line">			<span class="keyword">if</span> (o.left &gt;= y.left + y.width || o.left + o.width &lt;= y.left) &#123;</div><div class="line">				<span class="keyword">return</span> <span class="literal">false</span></div><div class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (o.top &gt;= y.top + y.height || o.top + o.height &lt;= y.top) &#123;</div><div class="line">				<span class="keyword">return</span> <span class="literal">false</span></div><div class="line">			&#125;</div><div class="line"></div><div class="line">			<span class="keyword">var</span> coByLR = <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>) </span>&#123;</div><div class="line">				<span class="keyword">return</span> <span class="built_in">Math</span>.abs(x.left + x.width - y.left)</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">var</span> coByTB = <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>) </span>&#123;</div><div class="line">				<span class="keyword">return</span> <span class="built_in">Math</span>.abs(x.top + x.height - y.top)</div><div class="line">			&#125;</div><div class="line"></div><div class="line">			<span class="keyword">var</span> dist = <span class="built_in">Math</span>.min(coByLR(o, y), coByLR(y, o), coByTB(o, y), coByTB(y, o))</div><div class="line">			<span class="keyword">switch</span> (dist) &#123;</div><div class="line">				<span class="keyword">case</span> coByLR(y, o):</div><div class="line">					<span class="keyword">return</span> <span class="string">'L'</span></div><div class="line">				<span class="keyword">case</span> coByLR(o, y):</div><div class="line">					<span class="keyword">return</span> <span class="string">'R'</span></div><div class="line">				<span class="keyword">case</span> coByTB(y, o):</div><div class="line">					<span class="keyword">return</span> <span class="string">'T'</span></div><div class="line">				<span class="keyword">case</span> coByTB(o, y):</div><div class="line">					<span class="keyword">return</span> <span class="string">'B'</span></div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		o.drawObj = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">			text.style.left = o.left + <span class="string">"px"</span></div><div class="line">			button.style.left = o.left + textStyle.width + <span class="string">"px"</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> o</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">var</span> Ball = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="keyword">var</span> ball = <span class="built_in">document</span>.querySelector(<span class="string">"div.qrcode-img"</span>)</div><div class="line">		ball.style.position = <span class="string">"fixed"</span></div><div class="line">		<span class="keyword">var</span> ballStyle = ball.getClientRects()[<span class="number">0</span>]</div><div class="line"></div><div class="line">		<span class="keyword">var</span> o = &#123;</div><div class="line">			ball: ball,</div><div class="line">			left: ballStyle.left,</div><div class="line">			top: ballStyle.top,</div><div class="line">			width: ballStyle.width,</div><div class="line">			height: ballStyle.height,</div><div class="line">			speedTop: <span class="number">20</span>,</div><div class="line">			speedLeft: <span class="number">20</span>,</div><div class="line">			fired: <span class="literal">false</span>,</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		o.fire = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">			o.fired = <span class="literal">true</span></div><div class="line">		&#125;</div><div class="line">		o.move = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">			<span class="keyword">if</span> (o.fired) &#123;</div><div class="line">				<span class="keyword">if</span> (o.left &lt; <span class="number">0</span> || o.left + o.width &gt; <span class="built_in">window</span>.innerWidth) &#123;</div><div class="line">					o.speedLeft = -o.speedLeft</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">if</span> (o.top &lt; <span class="number">0</span> || o.top + o.height &gt; <span class="built_in">window</span>.innerHeight) &#123;</div><div class="line">					o.speedTop = -o.speedTop</div><div class="line">				&#125;</div><div class="line">				o.top += o.speedTop</div><div class="line">				o.left += o.speedLeft</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		o.moveBack = <span class="function"><span class="keyword">function</span> (<span class="params">type</span>) </span>&#123;</div><div class="line">			<span class="keyword">var</span> t = type</div><div class="line">			<span class="keyword">switch</span> (t) &#123;</div><div class="line">				<span class="keyword">case</span> <span class="string">'L'</span>:</div><div class="line">					o.speedLeft = -<span class="built_in">Math</span>.abs(o.speedLeft)</div><div class="line">					<span class="keyword">break</span></div><div class="line">				<span class="keyword">case</span> <span class="string">'R'</span>:</div><div class="line">					o.speedLeft = <span class="built_in">Math</span>.abs(o.speedLeft)</div><div class="line">					<span class="keyword">break</span></div><div class="line">				<span class="keyword">case</span> <span class="string">'T'</span>:</div><div class="line">					o.speedTop = -<span class="built_in">Math</span>.abs(o.speedTop)</div><div class="line">					<span class="keyword">break</span></div><div class="line">				<span class="keyword">case</span> <span class="string">'B'</span>:</div><div class="line">					o.speedTop = <span class="built_in">Math</span>.abs(o.speedTop)</div><div class="line">					<span class="keyword">break</span></div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		o.drawObj = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">			ball.style.left = o.left + <span class="string">"px"</span></div><div class="line">			ball.style.top = o.top + <span class="string">"px"</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> o</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">var</span> GouGame = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="keyword">var</span> g = &#123;</div><div class="line">			actions: &#123;&#125;,</div><div class="line">			keydowns: &#123;&#125;,</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">window</span>.addEventListener(<span class="string">'keydown'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line">			g.keydowns[event.key] = <span class="literal">true</span></div><div class="line">		&#125;)</div><div class="line">		<span class="built_in">window</span>.addEventListener(<span class="string">'keyup'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line">			g.keydowns[event.key] = <span class="literal">false</span></div><div class="line">		&#125;)</div><div class="line">		g.registerAction = <span class="function"><span class="keyword">function</span> (<span class="params">key, callback</span>) </span>&#123;</div><div class="line">			g.actions[key] = callback</div><div class="line">		&#125;</div><div class="line">		setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">			<span class="keyword">var</span> actions = <span class="built_in">Object</span>.keys(g.actions)</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; actions.length; i++) &#123;</div><div class="line">				<span class="keyword">var</span> key = actions[i]</div><div class="line">				<span class="keyword">if</span> (g.keydowns[key]) &#123;</div><div class="line">					g.actions[key]()</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			g.update()</div><div class="line">			g.draw()</div><div class="line">		&#125;, <span class="number">1000</span> / <span class="number">60</span>)</div><div class="line">		<span class="keyword">return</span> g</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">var</span> __main = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="keyword">var</span> game = GouGame()</div><div class="line">		<span class="keyword">var</span> paddle = Paddle()</div><div class="line">		<span class="keyword">var</span> ball = Ball()</div><div class="line">		game.registerAction(<span class="string">'a'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">			paddle.moveLeft()</div><div class="line">		&#125;)</div><div class="line">		game.registerAction(<span class="string">'d'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">			paddle.moveRight()</div><div class="line">		&#125;)</div><div class="line">		game.registerAction(<span class="string">'f'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">			ball.fire()</div><div class="line">		&#125;)</div><div class="line">		game.update = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">			<span class="keyword">var</span> i = paddle.collide(ball)</div><div class="line">			<span class="keyword">if</span> (i) &#123;</div><div class="line">				ball.moveBack(i)</div><div class="line">			&#125;</div><div class="line">			ball.move()</div><div class="line">		&#125;</div><div class="line">		game.draw = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">			paddle.drawObj()</div><div class="line">			ball.drawObj()</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	__main()</div><div class="line"></div><div class="line">&#125;)(<span class="built_in">window</span>)</div></pre></td></tr></table></figure></p>
<hr>
<p>Version 1.0</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> Paddle = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> text = <span class="built_in">document</span>.querySelector(<span class="string">"span.bg.s_ipt_wr.quickdelete-wrap"</span>)</div><div class="line">        <span class="keyword">var</span> button = <span class="built_in">document</span>.querySelector(<span class="string">"#su"</span>)</div><div class="line">        text.style.position = <span class="string">"fixed"</span></div><div class="line">        button.style.position = <span class="string">"fixed"</span></div><div class="line">        <span class="keyword">var</span> textStyle = text.getClientRects()[<span class="number">0</span>]</div><div class="line">        <span class="keyword">var</span> buttonWidth = button.getClientRects()[<span class="number">0</span>].width</div><div class="line">        button.style.left = (textStyle.left + textStyle.width) + <span class="string">"px"</span></div><div class="line"></div><div class="line">        <span class="keyword">var</span> o = &#123;</div><div class="line">            text: text,</div><div class="line">            button: button,</div><div class="line">            left: textStyle.left,</div><div class="line">            top: textStyle.top,</div><div class="line">            height: textStyle.height,</div><div class="line">            width: textStyle.width + buttonWidth,</div><div class="line">            speed: <span class="number">15</span>,</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        o.moveLeft = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> a = o.left - o.speed</div><div class="line">            <span class="keyword">if</span> (a &lt;= <span class="number">0</span>) &#123;</div><div class="line">                o.left = <span class="number">0</span></div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                o.left = a</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        o.moveRight = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> a = o.left + o.speed</div><div class="line">            <span class="keyword">if</span> (a + o.width &gt;= <span class="built_in">window</span>.innerWidth) &#123;</div><div class="line">                o.left = <span class="built_in">window</span>.innerWidth - o.width</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                o.left = a</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        o.collide = <span class="function"><span class="keyword">function</span> (<span class="params">y</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (o.left &gt;= y.left &amp;&amp; o.left &gt;= y.left + y.width) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (o.left &lt;= y.left &amp;&amp; o.left + o.width &lt;= y.left) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (o.top &gt;= y.top &amp;&amp; o.top &gt;= y.top + y.height) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (o.top &lt;= y.top &amp;&amp; o.top + o.height &lt;= y.top) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        o.drawObj = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            text.style.left = o.left + <span class="string">"px"</span></div><div class="line">            button.style.left = o.left + textStyle.width + <span class="string">"px"</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> o</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> Ball = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> ball = <span class="built_in">document</span>.querySelector(<span class="string">"div.qrcode-img"</span>)</div><div class="line">        ball.style.position = <span class="string">"fixed"</span></div><div class="line">        <span class="keyword">var</span> ballStyle = ball.getClientRects()[<span class="number">0</span>]</div><div class="line">        <span class="keyword">var</span> o = &#123;</div><div class="line">            ball: ball,</div><div class="line">            left: ballStyle.left,</div><div class="line">            top: ballStyle.top,</div><div class="line">            width: ballStyle.width,</div><div class="line">            height: ballStyle.height,</div><div class="line">            speedTop: <span class="number">10</span>,</div><div class="line">            speedLeft: <span class="number">10</span>,</div><div class="line">            fired: <span class="literal">false</span>,</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        o.fire = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            o.fired = <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        o.move = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (o.fired) &#123;</div><div class="line">                <span class="keyword">if</span> (o.left &lt; <span class="number">0</span> || o.left + o.width &gt; <span class="built_in">window</span>.innerWidth) &#123;</div><div class="line">                    o.speedLeft = -o.speedLeft</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (o.top &lt; <span class="number">0</span> || o.top + o.height &gt; <span class="built_in">window</span>.innerHeight) &#123;</div><div class="line">                    o.speedTop = -o.speedTop</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                o.top += o.speedTop</div><div class="line">                o.left += o.speedLeft</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        o.moveBack = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            o.speedTop = -o.speedTop</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        o.drawObj = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            ball.style.left = o.left + <span class="string">"px"</span></div><div class="line">            ball.style.top = o.top + <span class="string">"px"</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> o</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> GouGame = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> g = &#123;</div><div class="line">            actions: &#123;&#125;,</div><div class="line">            keydowns: &#123;&#125;,</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="built_in">window</span>.addEventListener(<span class="string">'keydown'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line">            g.keydowns[event.key] = <span class="literal">true</span></div><div class="line">        &#125;)</div><div class="line">        <span class="built_in">window</span>.addEventListener(<span class="string">'keyup'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line">            g.keydowns[event.key] = <span class="literal">false</span></div><div class="line">        &#125;)</div><div class="line">        g.registerAction = <span class="function"><span class="keyword">function</span> (<span class="params">key, callback</span>) </span>&#123;</div><div class="line">            g.actions[key] = callback</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> actions = <span class="built_in">Object</span>.keys(g.actions)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; actions.length; i++) &#123;</div><div class="line">                <span class="keyword">var</span> key = actions[i]</div><div class="line">                <span class="keyword">if</span> (g.keydowns[key]) &#123;</div><div class="line">                    g.actions[key]()</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            g.update()</div><div class="line">            g.draw()</div><div class="line">        &#125;, <span class="number">1000</span> / <span class="number">60</span>)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> g</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> __main = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> game = GouGame()</div><div class="line">        <span class="keyword">var</span> paddle = Paddle()</div><div class="line">        <span class="keyword">var</span> ball = Ball()</div><div class="line"></div><div class="line">        game.registerAction(<span class="string">'a'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            paddle.moveLeft()</div><div class="line">        &#125;)</div><div class="line">        game.registerAction(<span class="string">'d'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            paddle.moveRight()</div><div class="line">        &#125;)</div><div class="line">        game.registerAction(<span class="string">'f'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            ball.fire()</div><div class="line">        &#125;)</div><div class="line"></div><div class="line">        game.update = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (paddle.collide(ball)) &#123;</div><div class="line">                ball.moveBack()</div><div class="line">            &#125;</div><div class="line">            ball.move()</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        game.draw = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            paddle.drawObj()</div><div class="line">            ball.drawObj()</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    __main()</div><div class="line">&#125;)(<span class="built_in">window</span>)</div></pre></td></tr></table></figure>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;挖坑，待填。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="JavaScript" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://gaufoo.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript之快速理解同步、异步、回调</title>
    <link href="http://gaufoo.com/2017/08/31/JavaScript%E4%B9%8B%E5%BF%AB%E9%80%9F%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E3%80%81%E5%9B%9E%E8%B0%83/"/>
    <id>http://gaufoo.com/2017/08/31/JavaScript之快速理解同步、异步、回调/</id>
    <published>2017-08-31T06:29:50.000Z</published>
    <updated>2017-09-06T09:17:21.713Z</updated>
    
    <content type="html"><![CDATA[<p>今天终于对这几个概念有了更深入的理解，下面是讲解。</p>
<a id="more"></a>
<hr>
<h2 id="一个例子"><a href="#一个例子" class="headerlink" title="一个例子"></a>一个例子</h2><p>想象一个场景：你约了女神去玩，结果睡过了头。女神在目的地等了很久，心情越来越烦躁。你到达时，女神甩了你好几个耳光。</p>
<p>不太了解JS同步、异步、回调机制的新手，可能会这样来写代码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">	<span class="function"><span class="keyword">function</span> <span class="title">dating</span>(<span class="params">hours</span>) </span>&#123;</div><div class="line">		<span class="keyword">var</span> SP = <span class="number">0</span>; <span class="comment">// SP,愤怒值 </span></div><div class="line">		<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; hours; i++) &#123;</div><div class="line">			setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</div><div class="line">				<span class="built_in">console</span>.log(<span class="string">"等了"</span> + i + <span class="string">"个小时"</span>)</div><div class="line">				SP++</div><div class="line">			&#125;, <span class="number">1000</span>)</div><div class="line">		&#125;</div><div class="line">		onBack(SP)</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">function</span> <span class="title">onBack</span>(<span class="params">num</span>) </span>&#123;</div><div class="line">		alert(<span class="string">"我来迟了!"</span>)</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</div><div class="line">			<span class="built_in">console</span>.log(<span class="string">"打了"</span> + i + <span class="string">"个耳光\n"</span>)</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	dating(<span class="number">5</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>却输出了这样的结果：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">弹窗：我来迟了！</div><div class="line">等了<span class="number">5</span>个小时</div><div class="line">等了<span class="number">5</span>个小时</div><div class="line">等了<span class="number">5</span>个小时</div><div class="line">等了<span class="number">5</span>个小时</div><div class="line">等了<span class="number">5</span>个小时</div></pre></td></tr></table></figure></p>
<p>简直莫名其妙，瞬间弹窗，耳光也没有打，小时数也不对。</p>
<hr>
<h2 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h2><p>一行行看：<br><strong>首先</strong>调用<code>dating(5)</code><br>声明变量后，到达：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; hours; i++) &#123;</div><div class="line">	setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="string">"等了"</span> + i + <span class="string">"个小时"</span>)</div><div class="line">		SP++</div><div class="line">	&#125;, <span class="number">1000</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>setTimeout</code>是回调函数，JS会把它丢到一边。这个循环捕获的5个回调函数，都被抛弃了。但<code>i</code>已经变成了5。</p>
<p><strong>然后</strong>到达：<code>onBack(SP)</code>。注意，由于上面没有执行回调函数，因此此时<code>SP</code>值为0<br>那么<code>onBack(0)</code>，得到的结果就是弹窗一次，不<code>log</code>。</p>
<p><strong>最后</strong>同步代码都执行完了，这时该乖乖等异步和回调了。<br>一秒后，5个<code>setTimeout</code>全到了执行的时机，于是<code>&quot;等了5个小时&quot;</code>就齐刷刷地出来了。</p>
<hr>
<h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">	<span class="function"><span class="keyword">function</span> <span class="title">dating</span>(<span class="params">hours, callBack</span>) </span>&#123;</div><div class="line">		<span class="keyword">var</span> SP = <span class="number">0</span>; <span class="comment">// SP,愤怒值 </span></div><div class="line">		<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; hours; i++) &#123;</div><div class="line">			(<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</div><div class="line">				setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</div><div class="line">					<span class="built_in">console</span>.log(<span class="string">"等了"</span> + i + <span class="string">"个小时"</span>)</div><div class="line">					SP++</div><div class="line">					<span class="keyword">if</span> (i + <span class="number">1</span> === hours) &#123;</div><div class="line">						callBack(SP)</div><div class="line">					&#125;</div><div class="line">				&#125;, i * <span class="number">1000</span>)</div><div class="line">			&#125;)(i)</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">function</span> <span class="title">onBack</span>(<span class="params">num</span>) </span>&#123;</div><div class="line">		alert(<span class="string">"我来迟了!"</span>)</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</div><div class="line">			<span class="built_in">console</span>.log(<span class="string">"打了"</span> + i + <span class="string">"个耳光\n"</span>)</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	dating(<span class="number">5</span>, onBack)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>修改了<code>dating</code>函数，代码难看了不少。执行过程会变成怎样呢？<br>当<code>dating</code>进入<code>for</code>循环，执行了5个函数：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</div><div class="line">	setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="string">"等了"</span> + i + <span class="string">"个小时"</span>)</div><div class="line">		SP++</div><div class="line">		<span class="keyword">if</span> (i + <span class="number">1</span> === hours) &#123;</div><div class="line">			callBack(SP)</div><div class="line">		&#125;</div><div class="line">	&#125;, i * <span class="number">1000</span>)</div><div class="line">&#125;)(<span class="number">0</span>)</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</div><div class="line">	setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="string">"等了"</span> + i + <span class="string">"个小时"</span>)</div><div class="line">		SP++</div><div class="line">		<span class="keyword">if</span> (i + <span class="number">1</span> === hours) &#123;</div><div class="line">			callBack(SP)</div><div class="line">		&#125;</div><div class="line">	&#125;, i * <span class="number">1000</span>)</div><div class="line">&#125;)(<span class="number">1</span>)</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</div><div class="line">	setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="string">"等了"</span> + i + <span class="string">"个小时"</span>)</div><div class="line">		SP++</div><div class="line">		<span class="keyword">if</span> (i + <span class="number">1</span> === hours) &#123;</div><div class="line">			callBack(SP)</div><div class="line">		&#125;</div><div class="line">	&#125;, i * <span class="number">1000</span>)</div><div class="line">&#125;)(<span class="number">2</span>)</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</div><div class="line">	setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="string">"等了"</span> + i + <span class="string">"个小时"</span>)</div><div class="line">		SP++</div><div class="line">		<span class="keyword">if</span> (i + <span class="number">1</span> === hours) &#123;</div><div class="line">			callBack(SP)</div><div class="line">		&#125;</div><div class="line">	&#125;, i * <span class="number">1000</span>)</div><div class="line">&#125;)(<span class="number">3</span>)</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</div><div class="line">	setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="string">"等了"</span> + i + <span class="string">"个小时"</span>)</div><div class="line">		SP++</div><div class="line">		<span class="keyword">if</span> (i + <span class="number">1</span> === hours) &#123;</div><div class="line">			callBack(SP)</div><div class="line">		&#125;</div><div class="line">	&#125;, i * <span class="number">1000</span>)</div><div class="line">&#125;)(<span class="number">4</span>)</div></pre></td></tr></table></figure></p>
<p>因为<code>i</code>作为参数传入匿名函数内，因此会被保存下来。<br>此时获得了5个延时分别为0,1000,2000,3000,4000的<code>setTimeout</code>，而且已经没有任何同步代码了，开始等待或执行异步和回调。<br>等到花儿都谢了，终于轮到4000的<code>setTimeout</code>，<code>if</code>判断生效，执行<code>callBack(SP)</code>。果断地甩了0,1,2,3,4个耳光。</p>
<hr>
<h2 id="思维锻炼"><a href="#思维锻炼" class="headerlink" title="思维锻炼"></a>思维锻炼</h2><p>求下面代码的输出：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="keyword">let</span> a = <span class="keyword">new</span> <span class="built_in">Promise</span>(</div><div class="line">        <span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="number">1</span>)</div><div class="line">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="number">2</span>), <span class="number">0</span>)</div><div class="line">            <span class="built_in">console</span>.log(<span class="number">3</span>)</div><div class="line">            <span class="built_in">console</span>.log(<span class="number">4</span>)</div><div class="line">            resolve(<span class="literal">true</span>)</div><div class="line">        &#125;</div><div class="line">    )</div><div class="line">    a.then(<span class="function"><span class="params">v</span> =&gt;</span> &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="number">8</span>)</div><div class="line">    &#125;)</div><div class="line"></div><div class="line">    <span class="keyword">let</span> b = <span class="keyword">new</span> <span class="built_in">Promise</span>(</div><div class="line">        <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="number">5</span>)</div><div class="line">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="number">6</span>), <span class="number">0</span>)</div><div class="line">        &#125;</div><div class="line">    )</div><div class="line"></div><div class="line">    <span class="built_in">console</span>.log(<span class="number">7</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>答案：右键-&gt;检查-&gt;console-&gt;复制粘贴-&gt;回车</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天终于对这几个概念有了更深入的理解，下面是讲解。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="JavaScript" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://gaufoo.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Python之Requests库学习笔记</title>
    <link href="http://gaufoo.com/2017/08/30/Python%E4%B9%8BRequests%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://gaufoo.com/2017/08/30/Python之Requests库学习笔记/</id>
    <published>2017-08-30T15:59:39.000Z</published>
    <updated>2017-09-06T09:17:44.025Z</updated>
    
    <content type="html"><![CDATA[<p>记录以备后用</p>
<a id="more"></a>
<hr>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ul>
<li><code>requests.request(method, url, **kwargs)</code>   // 最主要, 其他方法都是由此方法封装而来</li>
<li><code>requests.get(url, params=None, **kwargs)</code>  // 最常用</li>
<li><code>requests.head(url, **kwargs)</code>  // 只拿head</li>
<li><code>requests.post(url, data=None, json=None, **kwargs)</code></li>
<li><code>requests.put(url, data=None, **kwargs)</code></li>
<li><code>requests.patch(url, data=None, **kwargs)</code></li>
<li><code>requests.delete(url, **kwargs)</code></li>
</ul>
<hr>
<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ul>
<li><p><code>params</code> : 字典或字节序列，作为参数增加到url中</p>
  <figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>kv = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>, <span class="string">'key2'</span>: <span class="string">'value2'</span>&#125;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'GET'</span>, <span class="string">'http://python123.io/ws'</span>, params=kv)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(r.url)</div><div class="line">http://python123.io/ws?key1=value1&amp;key2=value2</div></pre></td></tr></table></figure>
</li>
<li><p><code>data</code> : 字典、字节序列或文件对象，作为Request的内容</p>
  <figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>kv = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>, <span class="string">'key2'</span>: <span class="string">'value2'</span>&#125;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'POST'</span>, <span class="string">'http://python123.io/ws'</span>, data=kv)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(r.text)</div><div class="line">&#123; ...</div><div class="line">    <span class="string">"form"</span>: &#123;</div><div class="line">    <span class="string">"key2"</span>: <span class="string">"value2"</span>,</div><div class="line">    <span class="string">"key1"</span>: <span class="string">"value1"</span></div><div class="line">    &#125;,</div><div class="line">&#125;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>body = <span class="string">'主体内容'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'POST'</span>, <span class="string">'http://python123.io/ws'</span>, data=body)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(r.text)</div><div class="line">&#123; ...</div><div class="line">    <span class="string">"data"</span>: <span class="string">"主体内容"</span>,</div><div class="line">    <span class="string">"form"</span>: &#123;&#125;,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p><code>json</code> : JSON格式的数据，作为Request的内容</p>
  <figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>kv = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>&#125;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'POST'</span>, <span class="string">'http://python123.io/ws'</span>, json=kv)</div></pre></td></tr></table></figure>
</li>
<li><p><code>headers</code> : 字典，HTTP定制头</p>
  <figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>hd = &#123;<span class="string">'user‐agent'</span>: <span class="string">'Chrome/10'</span>&#125;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'POST'</span>, <span class="string">'http://python123.io/ws'</span>, headers=hd)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p><code>cookies</code> : 字典或CookieJar，Request中的cookie</p>
</li>
<li><p><code>auth</code> : 元组，支持HTTP认证功能</p>
</li>
<li><p><code>files</code> : 字典类型，传输文件</p>
  <figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>fs = &#123;<span class="string">'file'</span>: open(<span class="string">'data.xls'</span>, <span class="string">'rb'</span>)&#125;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'POST'</span>, <span class="string">'http://python123.io/ws'</span>, files=fs)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><code>timeout</code> : 设定超时时间，单位为秒  <figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'GET'</span>, <span class="string">'http://www.baidu.com'</span>, timeout=<span class="number">10</span>)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><code>proxies</code> : 字典类型，设定访问代理服务器，可以增加登录认证  <figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>pxs = &#123; <span class="string">'http'</span>: <span class="string">'http://user:pass@10.10.10.1:1234'</span></div><div class="line">            <span class="string">'https'</span>: <span class="string">'https://10.10.10.1:4321'</span> &#125;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'GET'</span>, <span class="string">'http://www.baidu.com'</span>, proxies=pxs)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><code>allow_redirects</code> : True/False，默认为True，重定向开关</li>
<li><code>stream</code> : True/False，默认为True，获取内容立即下载开关</li>
<li><code>verify</code> : True/False，默认为True，认证SSL证书开关</li>
<li><code>cert</code> : 本地SSL证书路径</li>
</ul>
<hr>
<h2 id="Response对象的属性"><a href="#Response对象的属性" class="headerlink" title="Response对象的属性"></a>Response对象的属性</h2><ul>
<li><code>r.status_code</code>: HTTP请求的返回状态，200表示连接成功，其余表示失败</li>
<li><code>r.text</code>: HTTP响应内容的字符串形式，即url对应的页面内容</li>
<li><code>r.encoding</code>: 从HTTP header中<strong>猜测</strong>的响应内容编码方式</li>
<li><code>r.apparent_encoding</code>: 从内容中分析出的响应内容编码方式（备选编码方式）</li>
<li><code>r.content</code>: HTTP响应内容的二进制形式</li>
</ul>
<hr>
<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><ul>
<li><code>requests.ConnectionError</code>: 网络连接错误异常，如DNS查询失败、拒绝连接等</li>
<li><code>requests.HTTPError</code>: HTTP错误异常</li>
<li><code>requests.URLRequired</code>: URL缺失异常</li>
<li><code>requests.TooManyRedirects</code>: 超过最大重定向次数，产生重定向异常</li>
<li><code>requests.ConnectTimeout</code>: 连接远程服务器超时异常</li>
<li><code>requests.Timeout</code>: 请求URL超时，产生超时异常</li>
</ul>
<h3 id="判断异常的方法"><a href="#判断异常的方法" class="headerlink" title="判断异常的方法"></a>判断异常的方法</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(url)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>r.raise_for_status()</div></pre></td></tr></table></figure>
<p><code>r.raise_for_status()</code>: 如果不是200，产生异常 <code>requests.HTTPError</code></p>
<p><code>r.raise_for_status()</code>在方法内部判断<code>r.status_code</code>是否等于200，不需要增加额外的if语句，该语句便于利用try‐except进行异常处理</p>
<hr>
<h2 id="爬取网页的通用代码框架"><a href="#爬取网页的通用代码框架" class="headerlink" title="爬取网页的通用代码框架"></a>爬取网页的通用代码框架</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        r = requests.get(url,timeout = <span class="number">30</span>)</div><div class="line">        r.raise_for_status()</div><div class="line">        r.encoding = r.apparent_encoding</div><div class="line">        <span class="keyword">return</span> r.text</div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        <span class="keyword">return</span> <span class="string">"产生异常"</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    url = <span class="string">"https://www.baidu.com"</span></div><div class="line">    print(getHTMLText(url))</div></pre></td></tr></table></figure>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录以备后用&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Python" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/Python/"/>
    
    
      <category term="Python" scheme="http://gaufoo.com/tags/Python/"/>
    
      <category term="web" scheme="http://gaufoo.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>C的表达式、语句与副作用</title>
    <link href="http://gaufoo.com/2017/08/30/C%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%81%E8%AF%AD%E5%8F%A5%E4%B8%8E%E5%89%AF%E4%BD%9C%E7%94%A8/"/>
    <id>http://gaufoo.com/2017/08/30/C的表达式、语句与副作用/</id>
    <published>2017-08-30T11:17:05.000Z</published>
    <updated>2017-09-06T09:16:42.537Z</updated>
    
    <content type="html"><![CDATA[<p>C语言中，通常利用副作用来完成我们的目标。但由于副作用产生的时机，其结果有时会让人疑惑。</p>
<a id="more"></a>
<hr>
<p>知乎上有这样一个<a href="https://www.zhihu.com/question/64370774/answer/219591438&quot;" target="_blank" rel="external">问题</a>:</p>
<blockquote><strong>C语言中 *p++ = *p 是如何工作的？</strong><br>我在测试一个运算符优先级的代码的时候，碰见了这个问题，我没法用自己的方式理解，很抱歉打扰各位，希望你们在闲暇之余，能解答一下我的困惑。<br><br>示例代码：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LEN 5</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">  <span class="built_in">printf</span> (<span class="string">"Hello World"</span>);</div><div class="line">  <span class="keyword">int</span> a[LEN] = &#123; <span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span> &#125;;</div><div class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">  <span class="keyword">int</span> *p = a;</div><div class="line"></div><div class="line">  <span class="keyword">for</span> (; i &lt; LEN; ++i)</div><div class="line">    &#123;</div><div class="line">        *p++ = *p;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;LEN;++i)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i]);</div><div class="line">    &#125;</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br></blockquote>



<p>问题的解答需要了解这些概念：</p>
<hr>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="顺序点"><a href="#顺序点" class="headerlink" title="顺序点"></a>顺序点</h3><blockquote>A sequence point is a point in program execution at which all side effects are evaluated before going on to<br>the next step. In C, the semicolon in a statement marks a sequence point. That means all changes made by<br>assignment operators, increment operators, and decrement operators in a statement must take place before a<br>program proceeds to the next statement. Some operators that we’ll discuss in later chapters have sequence<br>points. Also, the end of any full expression is a sequence point.<br></blockquote>


<p>在顺序点处，所有的副作用都在进入下一步前被计算。也就是说，一句语句中的赋值、自增、自减所作出的改变必须在程序进入下一个语句前发生。在C中，语句里的<strong>分号</strong>标志了一个顺序点。任何一个<strong>完整的表达式</strong>的结束也是一个顺序点。<br>但是，并<strong>没有保证</strong>在哪个表达式执行后发生。其结果取决于编译器的处理。</p>
<h3 id="完整的表达式"><a href="#完整的表达式" class="headerlink" title="完整的表达式"></a>完整的表达式</h3><blockquote>What’s a full expression? A full expression is one that’s not a subexpression of a larger expression. Examples<br>of full expressions include the expression in an expression statement and the expression serving as a test<br>condition for a while loop.<br></blockquote>


<p>完整的表达式不应该是更大的表达式中的子表达式。而是那些在表达式<strong>语句</strong>里的、以及在一个<code>while</code>循环里作为<strong>判断条件</strong>的表达式。</p>
<hr>
<h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2><p>考虑：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">x = <span class="number">0</span>;</div><div class="line">y = (<span class="number">4</span> + x++) + (<span class="number">6</span> + x++);</div><div class="line"><span class="built_in">printf</span>(<span class="string">"x = %d y = %d\n"</span>, x, y);</div></pre></td></tr></table></figure></p>
<p>C只能保证下一条语句前<code>x</code>自增了两次，却没有保证<code>x</code>是某个子表达式被计算后增加还是整个表达式被求值后增加。</p>
<ul>
<li>第一种情况，x在整个表达式被求值后才自增：x = 2 y = 10</li>
<li>第二种情况，(4 + x++)先求值，且x在被求值后自增，再求值(6 + x++)：x = 2 y = 11</li>
<li>第三种情况，(6 + x++)先求值，且x在被求值后自增，再求值(4 + x++)：x = 2 y = 11</li>
</ul>
<hr>
<h2 id="题目的解答"><a href="#题目的解答" class="headerlink" title="题目的解答"></a>题目的解答</h2><blockquote><code>*p++=*p;</code><br>这一句话一共包含了四个操作：<br>1. <code>*p</code> // 等号左边那个<br>2. <code>p++</code><br>3. <code>*p</code><br>4. <code>=</code><br>这些操作的所有依赖关系如下：<br><li> 1(<code>*p</code>)在2(<code>p++</code>)之前执行<br></li><li> 4(<code>=</code>)在1(<code>*p</code>)和3(<code>*p</code>)之后执行<br>有了这个约束，那么这四个操作的所有可能的顺序就有（人肉枚举有可能出错你自己检查）：<br></li><li> 1234<br></li><li> 1324<br></li><li> 1342<br></li><li> 3124<br></li><li> 3142<br><br>分别的意思就是<br></li><li> p[0]=p[1];p++;<br></li><li> p[0]=p[0];p++;<br></li><li> p[0]=p[0];p++;<br></li><li> p[0]=p[0];p++;<br></li><li> p[0]=p[0];p++;<br><br>作者：vczh<br>链接：<a href="https://www.zhihu.com/question/64370774/answer/219580436" target="_blank" rel="external">https://www.zhihu.com/question/64370774/answer/219580436</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br></li></blockquote>

<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C语言中，通常利用副作用来完成我们的目标。但由于副作用产生的时机，其结果有时会让人疑惑。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="C" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/C/"/>
    
    
      <category term="C" scheme="http://gaufoo.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Python之获取豆瓣电影Top250</title>
    <link href="http://gaufoo.com/2017/08/29/Python%E4%B9%8B%E8%8E%B7%E5%8F%96%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1Top250/"/>
    <id>http://gaufoo.com/2017/08/29/Python之获取豆瓣电影Top250/</id>
    <published>2017-08-29T09:57:35.000Z</published>
    <updated>2017-09-06T09:17:54.464Z</updated>
    
    <content type="html"><![CDATA[<p>  练习html各元素的获取，熟悉BeautifulSoup的使用。<br>  实例：豆瓣top250电影名单获取。</p>
<a id="more"></a>
<hr>
<h2 id="获取html页面"><a href="#获取html页面" class="headerlink" title="获取html页面"></a>获取html页面</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_page</span><span class="params">(url)</span>:</span></div><div class="line">    data = requests.get(url).content</div><div class="line">    <span class="string">'''</span></div><div class="line"><span class="string">    这里有效,但据说有时要伪装成浏览器,代码修改如下:</span></div><div class="line"><span class="string">    data = requests.get(url, headers=&#123;</span></div><div class="line"><span class="string">        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36'</span></div><div class="line"><span class="string">    &#125;).content</span></div><div class="line"><span class="string">    '''</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> data</div></pre></td></tr></table></figure>
<p><code>User-Agent</code>的获取方法：console敲入命令：<code>navigator.userAgent</code></p>
<h2 id="解析页面"><a href="#解析页面" class="headerlink" title="解析页面"></a>解析页面</h2><ul>
<li><p><strong>将html交给BeautifulSoup解析一下</strong></p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</div></pre></td></tr></table></figure>
</li>
<li><p><strong>找到数据element</strong></p>
</li>
</ul>
<ol>
<li>ol.grid_view<br><img src="/images/17-08-29-0.jpg" alt="t0"></li>
<li>div.hd<br><img src="/images/17-08-29-1.jpg" alt="t1"></li>
<li>span.title<br><img src="/images/17-08-29-2.jpg" alt="t2"></li>
</ol>
<ul>
<li><p><strong>出动选择器</strong></p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">movie_list_soup = soup.find(<span class="string">'ol'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'grid_view'</span>&#125;)</div><div class="line">detail = movie_li.find(<span class="string">'div'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'hd'</span>&#125;)</div><div class="line">movie_name = detail.find(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'title'</span>&#125;).getText()</div></pre></td></tr></table></figure>
</li>
<li><p><strong>循环把一页结果存下来</strong></p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">movie_name_list = []</div><div class="line"></div><div class="line"><span class="keyword">for</span> movie_li <span class="keyword">in</span> movie_list_soup.find_all(<span class="string">'li'</span>):</div><div class="line">    detail = movie_li.find(<span class="string">'div'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'hd'</span>&#125;)</div><div class="line">    movie_name = detail.find(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'title'</span>&#125;).getText()</div><div class="line">    movie_name_list.append(movie_name)</div></pre></td></tr></table></figure>
</li>
<li><p><strong>拿到下一页的element</strong><br><img src="/images/17-08-29-3.jpg" alt="t3"></p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">next_page = soup.find(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'next'</span>&#125;).find(<span class="string">'a'</span>)</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">with</span> open(<span class="string">'movies.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> fp:</div><div class="line">    <span class="keyword">while</span> url:</div><div class="line">        html = download_page(url)</div><div class="line">        movies, url = parse_html(html)</div><div class="line">        fp.write(<span class="string">u'&#123;movies&#125;\n'</span>.format(movies=<span class="string">'\n'</span>.join(movies)))</div></pre></td></tr></table></figure>
<hr>
<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line">DOWNLOAD_URL = <span class="string">"https://movie.douban.com/top250"</span></div><div class="line"></div><div class="line"><span class="comment"># 获取html页面</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_page</span><span class="params">(url)</span>:</span></div><div class="line"></div><div class="line">    data = requests.get(url).content</div><div class="line">    <span class="string">'''</span></div><div class="line"><span class="string">    这里有效,但据说有时要伪装成浏览器,代码修改如下:</span></div><div class="line"><span class="string">    data = requests.get(url, headers=&#123;</span></div><div class="line"><span class="string">        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36'</span></div><div class="line"><span class="string">    &#125;).content</span></div><div class="line"><span class="string">    '''</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> data</div><div class="line"></div><div class="line"><span class="comment"># 解析页面并返回 list_movie 与 下一页的url</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_html</span><span class="params">(html)</span>:</span></div><div class="line"></div><div class="line">    soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</div><div class="line">    movie_list_soup = soup.find(<span class="string">'ol'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'grid_view'</span>&#125;)</div><div class="line"></div><div class="line">    movie_name_list = []</div><div class="line"></div><div class="line">    <span class="keyword">for</span> movie_li <span class="keyword">in</span> movie_list_soup.find_all(<span class="string">'li'</span>):</div><div class="line">        detail = movie_li.find(<span class="string">'div'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'hd'</span>&#125;)</div><div class="line">        movie_name = detail.find(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'title'</span>&#125;).getText()</div><div class="line">        movie_name_list.append(movie_name)</div><div class="line"></div><div class="line">    next_page = soup.find(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'next'</span>&#125;).find(<span class="string">'a'</span>)</div><div class="line"></div><div class="line">    <span class="keyword">if</span> next_page:</div><div class="line">        <span class="keyword">return</span> movie_name_list, DOWNLOAD_URL + next_page[<span class="string">'href'</span>]</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> movie_name_list, <span class="keyword">None</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    url = DOWNLOAD_URL</div><div class="line"></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'movies.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> fp:</div><div class="line">        <span class="keyword">while</span> url:</div><div class="line">            html = download_page(url)</div><div class="line">            movies, url = parse_html(html)</div><div class="line">            fp.write(<span class="string">u'&#123;movies&#125;\n'</span>.format(movies=<span class="string">'\n'</span>.join(movies)))    </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  练习html各元素的获取，熟悉BeautifulSoup的使用。&lt;br&gt;  实例：豆瓣top250电影名单获取。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Python" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/Python/"/>
    
    
      <category term="Python" scheme="http://gaufoo.com/tags/Python/"/>
    
      <category term="web" scheme="http://gaufoo.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>test指令用于比较数值大小的可能性及推导</title>
    <link href="http://gaufoo.com/2017/08/25/test%E6%8C%87%E4%BB%A4%E7%94%A8%E4%BA%8E%E6%AF%94%E8%BE%83%E6%95%B0%E5%80%BC%E5%A4%A7%E5%B0%8F%E7%9A%84%E5%8F%AF%E8%83%BD%E6%80%A7%E5%8F%8A%E6%8E%A8%E5%AF%BC/"/>
    <id>http://gaufoo.com/2017/08/25/test指令用于比较数值大小的可能性及推导/</id>
    <published>2017-08-24T16:50:36.000Z</published>
    <updated>2017-09-06T09:17:58.902Z</updated>
    
    <content type="html"><![CDATA[<p>x86汇编语言中，cmp指令常用于两数值之间比较大小，test指令常用于位级判断。那么，test可不可以也用于比较数值大小呢？</p>
<a id="more"></a>
<hr>
<h2 id="提出问题"><a href="#提出问题" class="headerlink" title="提出问题"></a>提出问题</h2><p>今天有朋友向我提出了这样的问题，<img src="/images/17-08-25-0.jpg" alt="p1"><br>为什么<code>test</code>还有这种操作，<code>set</code>指令和<code>test</code>究竟是怎么凑到一起的。</p>
<h2 id="查找信息"><a href="#查找信息" class="headerlink" title="查找信息"></a>查找信息</h2><blockquote>
<p>CMP指令与SUB指令的行为是一样的。在ATT格式中，列出操作数的顺序是相反的，这使代码有点难读。如果两个操作数相等，这些指令会将零标志位设置为1，而其他的标志可以用来确定两个操作数之间的大小关系。</p>
<p>TEST指令的行为和AND指令一样，除了它们只设置条件码而不改变目的寄存器的值。典型的用法是，两个操作数是一样的（例如，testq %rax, %rax用来检查%rax是负数，零，还是正数），或其中的一个操作数是一个掩码，用来指示哪些位应该被测试。</p>
</blockquote>
<p>唔，看来课本只是重复了我们的问题，并没有给出解答。<br><br></p>
<blockquote>
<p>典型的用法是，两个操作数是一样的（例如，testq %rax, %rax用来检查%rax是负数，零，还是正数）</p>
</blockquote>
<p>但从这可以看出，<code>test</code>确实有这个用法。<br><br></p>
<p><img src="/images/17-08-25-1.png" alt="p2"><br>这里找到线索，<code>set</code>指令是和条件码直接关联的。那么就从<code>test</code>如何影响和改变条件码入手吧。</p>
<h2 id="推导"><a href="#推导" class="headerlink" title="推导"></a>推导</h2><blockquote>
<p>机器是通过某些指令来改变条件码，然后通过判断条件码的组合来完成控制操作。个人理解是，这些控制指令是对条件码判断的一种封装。</p>
</blockquote>
<p>回到我们纠结的这个问题上面：为什么<code>test</code>可以用于判断大小，以及 如何形成判断。</p>
<p><code>cmp</code>的行为相对容易理解，右操作数减去左操作数，然后修改<code>CF</code> <code>ZF</code> <code>SF</code> <code>OF</code>的值。<br>而<code>test</code>则是两个操作数进行<code>与</code>，不会影响到<code>OF</code> <code>CF</code>，仅能改变<code>SF</code> <code>ZF</code>，确定真的可以用来比较大小吗？</p>
<p>不过，<code>test</code>用于比较大小的范围极窄，仅仅是用于判断符号，也就是和数值<code>0</code>作比较。只有这种特殊情况的话，进行推理则方便多了，大不了穷举嘛。</p>
<p>下面就来对比<code>test S, S</code>和<code>cmp $0，S</code>。</p>
<p>当<code>S</code>看作有符号数，且大于<code>0</code>时：</p>
<ul>
<li><code>test S, S</code>，<code>SF</code>置0，<code>ZF</code>置0，<code>OF</code>置0</li>
<li><code>cmp $0，S</code>，<code>SF</code>置0，<code>ZF</code>置0，<code>OF</code>置0</li>
</ul>
<p>当<code>S</code>看作有符号数，且等于<code>0</code>时：</p>
<ul>
<li><code>test S, S</code>，<code>SF</code>置0，<code>ZF</code>置1，<code>OF</code>置0</li>
<li><code>cmp $0，S</code>，<code>SF</code>置0，<code>ZF</code>置1，<code>OF</code>置0</li>
</ul>
<p>当<code>S</code>看作有符号数，且小于<code>0</code>时：</p>
<ul>
<li><code>test S, S</code>，<code>SF</code>置1，<code>ZF</code>置0，<code>OF</code>置0</li>
<li><code>cmp $0，S</code>，<code>SF</code>置1，<code>ZF</code>置0，<code>OF</code>置0</li>
</ul>
<p>当<code>S</code>看作无符号数，且等于<code>0</code>时：</p>
<ul>
<li><code>test S, S</code>，<code>ZF</code>置1，<code>CF</code>置0</li>
<li><code>cmp $0，S</code>，<code>ZF</code>置1，<code>CF</code>置0</li>
</ul>
<p>当<code>S</code>看作无符号数，且不等于<code>0</code>时：</p>
<ul>
<li><code>test S, S</code>，<code>ZF</code>置0，<code>CF</code>置0</li>
<li><code>cmp $0，S</code>，<code>ZF</code>置0，<code>CF</code>置0</li>
</ul>
<p>惊奇地发现这两句指令的行为是<strong>一模一样</strong>的。原因在于<code>cmp</code>在与<code>0</code>作比较时，是不可能发生<strong>溢出</strong>和<strong>进（借）位</strong>的，因而不可能影响<code>OF</code> <code>CF</code>位，这和<code>test</code>指令是一样的。剩下的<code>SF</code>和<code>ZF</code>很容易推理，这里不赘述。</p>
<h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><p>对这样一段C代码进行汇编处理。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> a)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">  <span class="keyword">return</span> a &gt; <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="不进行优化"><a href="#不进行优化" class="headerlink" title="不进行优化"></a>不进行优化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gcc -S test.c</div></pre></td></tr></table></figure>
<p>得到汇编代码（节选）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">movl	%edi, -4(%rbp)</div><div class="line">cmpl	$0, -4(%rbp)</div><div class="line">setg	%al</div></pre></td></tr></table></figure></p>
<h3 id="进行-O1-优化"><a href="#进行-O1-优化" class="headerlink" title="进行 O1 优化"></a>进行 O1 优化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gcc -S -O1 test.c</div></pre></td></tr></table></figure>
<p>得到汇编代码（节选）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">testl	%edi, %edi</div><div class="line">setg	%al</div></pre></td></tr></table></figure></p>
<p>事实证明，<code>test</code>确实可以用于与<code>0</code>进行大小比较，且编译器更愿意优化成这种形式。</p>
<h2 id="结论与反思"><a href="#结论与反思" class="headerlink" title="结论与反思"></a>结论与反思</h2><p>当我们难以理解指令的逻辑时，则需要去探究它背后具体的操作过程，才能真正地理解操作的实际效果。</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;x86汇编语言中，cmp指令常用于两数值之间比较大小，test指令常用于位级判断。那么，test可不可以也用于比较数值大小呢？&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="汇编" scheme="http://gaufoo.com/categories/%E7%BC%96%E7%A8%8B/%E6%B1%87%E7%BC%96/"/>
    
    
      <category term="编程" scheme="http://gaufoo.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="汇编" scheme="http://gaufoo.com/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo下的NexT主题配置（一）</title>
    <link href="http://gaufoo.com/2017/08/23/Hexo%E4%B8%8B%E7%9A%84NexT%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://gaufoo.com/2017/08/23/Hexo下的NexT主题配置（一）/</id>
    <published>2017-08-23T14:31:52.000Z</published>
    <updated>2017-09-06T12:42:48.396Z</updated>
    
    <content type="html"><![CDATA[<p>这两天在一直在倒腾个人网站/博客之类的东西，就目前来说，hexo博客部署在Github这个方案是我最满意的。但相关配置什么的都还不会，那就来折腾好了，一边试验一边记录。</p>
<p>本文旨在方便作者以后的查阅。如有需要，高兴你来自取。</p>
<p>以下是NexT主题的一些配置。</p>
<a id="more"></a>
<hr>
<h2 id="网站信息"><a href="#网站信息" class="headerlink" title="网站信息"></a>网站信息</h2><h3 id="网页小图标"><a href="#网页小图标" class="headerlink" title="网页小图标"></a>网页小图标</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></div></pre></td></tr></table></figure>
<p>找到一张32*32大小的ico格式图片，命名为<code>favicon.ico</code>，放入目录<code>你的仓库\themes\next\source\</code>下。</p>
<h3 id="网站关键字"><a href="#网站关键字" class="headerlink" title="网站关键字"></a>网站关键字</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">keywords:</span> <span class="string">"Hexo, NexT"</span></div></pre></td></tr></table></figure>
<p>修改网站的默认关键字，中间需要用<code>英文逗号</code>隔开。</p>
<h3 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">rss:</span></div></pre></td></tr></table></figure>
<p>默认留空，代表开启。如需禁用，在其后填写<code>false</code></p>
<p>开启后，使用 Hexo 生成的 Feed 链接。 你需要先安装 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="external">hexo-generator-feed</a> 插件。</p>
<h3 id="网站建立时间"><a href="#网站建立时间" class="headerlink" title="网站建立时间"></a>网站建立时间</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">since:</span> <span class="number">2015</span></div></pre></td></tr></table></figure>
<p>修改footer的<code>年份表示</code>。</p>
<h3 id="作者图标"><a href="#作者图标" class="headerlink" title="作者图标"></a>作者图标</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">authoricon:</span> <span class="string">heart</span></div></pre></td></tr></table></figure>
<p>修改footer的<code>年份表示</code>和<code>作者</code>之间的图标。</p>
<blockquote>
<p>图标名称可以在<a href="http://fontawesome.io/icons/" target="_blank" rel="external">点击此处</a>获取。</p>
</blockquote>
<h3 id="驱动与主题版权声明"><a href="#驱动与主题版权声明" class="headerlink" title="驱动与主题版权声明"></a>驱动与主题版权声明</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">copyright:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>footer那行<code>由 Hexo 强力驱动 | 主题 — NexT.Mist v5.1.2</code>，强烈建议开启，给设计师和工程师最起码的尊重。</p>
<hr>
<h2 id="SEO-设置"><a href="#SEO-设置" class="headerlink" title="SEO 设置"></a>SEO 设置</h2><p>百度百科对”seo”的定义是：SEO（Search Engine Optimization），汉译为搜索引擎优化。搜索引擎优化是一种利用搜索引擎的搜索规则来提高目的网站在有关搜索引擎内的排名的方式。<br>讲人话就是你的博客将更容易被Google到。</p>
<h3 id="规范化"><a href="#规范化" class="headerlink" title="规范化"></a>规范化</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">canonical:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>参考： <a href="https://support.google.com/webmasters/answer/139066" target="_blank" rel="external">https://support.google.com/webmasters/answer/139066</a></p>
<p>在设置之前，先把<code>你的仓库\_config.yml</code>中的<code>url: http://yourdomain.com</code>修改成你自己的url。</p>
<h3 id="SEO-站点链接优化"><a href="#SEO-站点链接优化" class="headerlink" title="SEO 站点链接优化"></a>SEO 站点链接优化</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">seo:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>HEXO默认的文章链接形式为domain/year/month/day/postname，默认就是一个四级url，并且可能造成url过长，对搜索引擎是十分不友好的，这里将进行优化。</p>
<h3 id="主页副标题"><a href="#主页副标题" class="headerlink" title="主页副标题"></a>主页副标题</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">index_with_subtitle:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>如果开启，将添加主页副标题。副标题设置格式如下：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">subtitle:</span> <span class="string">Subtitle</span></div></pre></td></tr></table></figure></p>
<hr>
<h2 id="菜单设置"><a href="#菜单设置" class="headerlink" title="菜单设置"></a>菜单设置</h2><h3 id="菜单项目"><a href="#菜单项目" class="headerlink" title="菜单项目"></a>菜单项目</h3><p>示例<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attr">menu:</span></div><div class="line"><span class="attr">  home:</span> <span class="string">/</span></div><div class="line"><span class="attr">  archives:</span> <span class="string">/archives</span></div><div class="line">  <span class="comment">#about: /about</span></div><div class="line">  <span class="comment">#categories: /categories</span></div><div class="line"><span class="attr">  tags:</span> <span class="string">/tags</span></div><div class="line">  <span class="comment">#commonweal: /404.html</span></div></pre></td></tr></table></figure></p>
<p>设定菜单项目，对应的字段是 menu。 菜单内容的设置格式是：<code>item name: link</code>。可以手动添加其他菜单项目。其中 item name 是一个名称，这个名称并不直接显示在页面上，它将用于匹配图标以及翻译。</p>
<p> 默认的hexo里没有<code>about</code>、<code>categories</code>、<code>tags</code>、<code>commonweal</code>页面，需要手动创建。</p>
<p> 在终端创建页面：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo new page <span class="string">"about"</span></div><div class="line">hexo new page <span class="string">"categories"</span></div></pre></td></tr></table></figure></p>
<h3 id="菜单文本"><a href="#菜单文本" class="headerlink" title="菜单文本"></a>菜单文本</h3><p>设置菜单项的显示文本。Hexo 在生成项目名称的时候将使用这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 languages/{language}.yml （{language} 为你所使用的语言）。</p>
<p>示例<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">menu:</span></div><div class="line"><span class="attr">  home:</span> <span class="string">首页</span></div><div class="line"><span class="attr">  archives:</span> <span class="string">归档</span></div><div class="line"><span class="attr">  categories:</span> <span class="string">分类</span></div><div class="line"><span class="attr">  tags:</span> <span class="string">标签</span></div><div class="line"><span class="attr">  about:</span> <span class="string">关于</span></div><div class="line"><span class="attr">  search:</span> <span class="string">搜索</span></div><div class="line"><span class="attr">  commonweal:</span> <span class="string">公益404</span></div><div class="line"><span class="attr">  something:</span> <span class="string">有料</span></div></pre></td></tr></table></figure></p>
<h3 id="菜单图标"><a href="#菜单图标" class="headerlink" title="菜单图标"></a>菜单图标</h3><p>设定菜单项的图标，对应的字段是 menu_icons。 此设定格式是 item name: icon name，其中 item name 与上一步所配置的菜单名字对应，icon name 是 Font Awesome 图标的 名字。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。</p>
<p>示例<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="attr">menu_icons:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  home:</span> <span class="string">home</span></div><div class="line"><span class="attr">  about:</span> <span class="string">user</span></div><div class="line"><span class="attr">  categories:</span> <span class="string">th</span></div><div class="line"><span class="attr">  schedule:</span> <span class="string">calendar</span></div><div class="line"><span class="attr">  tags:</span> <span class="string">tags</span></div><div class="line"><span class="attr">  archives:</span> <span class="string">archive</span></div><div class="line"><span class="attr">  sitemap:</span> <span class="string">sitemap</span></div><div class="line"><span class="attr">  commonweal:</span> <span class="string">heartbeat</span></div></pre></td></tr></table></figure></p>
<p>图标名称可以在<a href="http://fontawesome.io/icons/" target="_blank" rel="external">点击此处</a>获取。</p>
<hr>
<h2 id="主题方案"><a href="#主题方案" class="headerlink" title="主题方案"></a>主题方案</h2><p>NexT有四种方案，选择其中一种，其他注释处理。</p>
<p>示例：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Schemes</span></div><div class="line"><span class="comment">#scheme: Muse</span></div><div class="line"><span class="attr">scheme:</span> <span class="string">Mist</span></div><div class="line"><span class="comment">#scheme: Pisces</span></div><div class="line"><span class="comment">#scheme: Gemini</span></div></pre></td></tr></table></figure></p>
<hr>
<h2 id="侧栏"><a href="#侧栏" class="headerlink" title="侧栏"></a>侧栏</h2><h3 id="个人社交链接"><a href="#个人社交链接" class="headerlink" title="个人社交链接"></a>个人社交链接</h3><h4 id="设置链接"><a href="#设置链接" class="headerlink" title="设置链接"></a>设置链接</h4><p>链接放置在 social 字段下，一行一个链接。其键值格式是 <code>显示文本: 链接地址</code>。<br>示例：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Social links</span></div><div class="line"><span class="attr">social:</span></div><div class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/your-user-name</span></div><div class="line"><span class="attr">  Twitter:</span> <span class="attr">https://twitter.com/your-user-name</span></div><div class="line">  <span class="string">微博:</span> <span class="attr">http://weibo.com/your-user-name</span></div><div class="line">  <span class="string">豆瓣:</span> <span class="attr">http://douban.com/people/your-user-name</span></div><div class="line">  <span class="string">知乎:</span> <span class="attr">http://www.zhihu.com/people/your-user-name</span></div><div class="line">  <span class="comment"># 等等</span></div></pre></td></tr></table></figure></p>
<h4 id="设置图标"><a href="#设置图标" class="headerlink" title="设置图标"></a>设置图标</h4><p>可以通过将<code>enable</code>设置成<code>false</code>来取消图标显示。</p>
<blockquote>
<p>图标名称可以在<a href="http://fontawesome.io/icons/" target="_blank" rel="external">点击此处</a>获取。</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Social Icons</span></div><div class="line"><span class="attr">social_icons:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line">  <span class="comment"># Icon Mappings</span></div><div class="line"><span class="attr">  GitHub:</span> <span class="string">github</span></div><div class="line"><span class="attr">  Twitter:</span> <span class="string">twitter</span></div><div class="line">  <span class="string">微博:</span> <span class="string">weibo</span></div></pre></td></tr></table></figure>
<h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p>默认：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#links_title: Links</span></div><div class="line"><span class="comment">#links_layout: block</span></div><div class="line"><span class="comment">#links_layout: inline</span></div><div class="line"><span class="comment">#links:</span></div><div class="line">  <span class="comment">#Title: http://example.com/</span></div></pre></td></tr></table></figure></p>
<p><code>Links</code>可以用来设置标题，<code>links</code>下摆放链接。<br>示例：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">links_title:</span> <span class="string">看看他们</span></div><div class="line"><span class="attr">links_layout:</span> <span class="string">block</span></div><div class="line"><span class="comment">#links_layout: inline</span></div><div class="line"><span class="attr">links:</span></div><div class="line">  <span class="string">小土刀:</span> <span class="attr">http://wdxtub.com/</span></div></pre></td></tr></table></figure></p>
<h3 id="个人头像"><a href="#个人头像" class="headerlink" title="个人头像"></a>个人头像</h3><p>图片命名<code>avatar.jpg</code>或<code>avatar.png</code>，<br>放置在目录<code>你的仓库\themes\next\source\images\</code>下，<br>并设置字段<code>avatar</code><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">avatar:</span> <span class="string">/images/avatar.jpg</span></div></pre></td></tr></table></figure></p>
<h3 id="侧栏目录"><a href="#侧栏目录" class="headerlink" title="侧栏目录"></a>侧栏目录</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">toc:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  number:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  wrap:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<p><code>enable</code>字段决定是否启动文章目录功能，<code>number</code>字段决定是否自动为目录添加数字标记，<code>wrap</code>字段决定目录标题过长时是否换行。</p>
<h3 id="版权声明"><a href="#版权声明" class="headerlink" title="版权声明"></a>版权声明</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">creative_commons:</span> <span class="string">by-nc-nd</span></div></pre></td></tr></table></figure>
<p>选择合适的版权声明，可选项：<code>by</code>, <code>by-nc</code>, <code>by-nc-nd</code>, <code>by-nc-sa</code>, <code>by-nd</code>, <code>by-sa</code>, <code>zero</code>，图标将显示在侧栏上。</p>
<h3 id="侧栏样式"><a href="#侧栏样式" class="headerlink" title="侧栏样式"></a>侧栏样式</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="attr">sidebar:</span></div><div class="line"><span class="attr">  position:</span> <span class="string">left</span></div><div class="line">  <span class="comment">#position: right</span></div><div class="line"></div><div class="line"><span class="attr">  display:</span> <span class="string">post</span></div><div class="line">  <span class="comment">#display: always</span></div><div class="line">  <span class="comment">#display: hide</span></div><div class="line">  <span class="comment">#display: remove</span></div><div class="line"></div><div class="line"><span class="attr">  offset:</span> <span class="number">12</span></div><div class="line"><span class="attr">  offset_float:</span> <span class="number">12</span></div><div class="line"></div><div class="line"><span class="attr">  b2t:</span> <span class="literal">false</span></div><div class="line"></div><div class="line"><span class="attr">  scrollpercent:</span> <span class="literal">false</span></div><div class="line"></div><div class="line"><span class="attr">  onmobile:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<h4 id="侧栏位置"><a href="#侧栏位置" class="headerlink" title="侧栏位置"></a>侧栏位置</h4><p>字段 <code>position</code> ，可选 左 <code>left</code> 、右 <code>right</code>，此项只在某些样式生效。</p>
<h4 id="出现时机"><a href="#出现时机" class="headerlink" title="出现时机"></a>出现时机</h4><p>字段 <code>display</code>，可选项：</p>
<ul>
<li><code>post</code> : 默认项。自动展开。</li>
<li><code>always</code> : 始终展开。</li>
<li><code>hide</code> : 只在点击 <code>展开按钮</code> 时展开。</li>
<li><code>remove</code> : 永不展开，且去除 <code>展开按钮</code> 。</li>
</ul>
<h4 id="间距"><a href="#间距" class="headerlink" title="间距"></a>间距</h4><p><code>offset</code> , <code>offset_float</code> , 设置与菜单栏的间距。</p>
<h4 id="回到顶部"><a href="#回到顶部" class="headerlink" title="回到顶部"></a>回到顶部</h4><p><code>b2t</code> 字段设置 <code>回到顶部</code> 按钮位置，<code>false</code> 置于 <code>展开按钮</code> 旁，<code>true</code> 置于侧栏里。</p>
<h4 id="页面百分比"><a href="#页面百分比" class="headerlink" title="页面百分比"></a>页面百分比</h4><p><code>scrollpercent</code> 设置 <code>回到顶部</code> 按钮旁是否显示网页所处位置占整页的百分比。</p>
<h4 id="移动端可见"><a href="#移动端可见" class="headerlink" title="移动端可见"></a>移动端可见</h4><p><code>onmobile</code> 设置移动端是否显示侧栏。</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这两天在一直在倒腾个人网站/博客之类的东西，就目前来说，hexo博客部署在Github这个方案是我最满意的。但相关配置什么的都还不会，那就来折腾好了，一边试验一边记录。&lt;/p&gt;
&lt;p&gt;本文旨在方便作者以后的查阅。如有需要，高兴你来自取。&lt;/p&gt;
&lt;p&gt;以下是NexT主题的一些配置。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo教程" scheme="http://gaufoo.com/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo" scheme="http://gaufoo.com/tags/Hexo/"/>
    
      <category term="配置" scheme="http://gaufoo.com/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>赞美github</title>
    <link href="http://gaufoo.com/2017/08/23/%E8%B5%9E%E7%BE%8Egithub/"/>
    <id>http://gaufoo.com/2017/08/23/赞美github/</id>
    <published>2017-08-23T04:21:02.000Z</published>
    <updated>2017-09-06T09:18:21.335Z</updated>
    
    <content type="html"><![CDATA[<p>感谢github</p>
<p>感谢hexo</p>
<p>感谢cctv<br><a id="more"></a></p>
<p>免费又夸张的博客</p>
<p>hhhhhhhhh(大笑</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感谢github&lt;/p&gt;
&lt;p&gt;感谢hexo&lt;/p&gt;
&lt;p&gt;感谢cctv&lt;br&gt;
    
    </summary>
    
      <category term="不归" scheme="http://gaufoo.com/categories/%E4%B8%8D%E5%BD%92/"/>
    
    
  </entry>
  
  <entry>
    <title>My New Post</title>
    <link href="http://gaufoo.com/2017/08/23/My-New-Post/"/>
    <id>http://gaufoo.com/2017/08/23/My-New-Post/</id>
    <published>2017-08-22T17:55:54.000Z</published>
    <updated>2017-09-06T09:17:31.321Z</updated>
    
    <content type="html"><![CDATA[<p>This is my first post.</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is my first post.&lt;/p&gt;
&lt;hr&gt;

    
    </summary>
    
      <category term="不归" scheme="http://gaufoo.com/categories/%E4%B8%8D%E5%BD%92/"/>
    
    
  </entry>
  
</feed>
